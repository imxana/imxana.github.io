<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XANA&#39;s Blog</title>
  <subtitle>I can be who you are</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-09-13T09:38:59.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>XANA</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>又他喵的要阳光长跑了</title>
    <link href="http://yoursite.com/2016/09/13/run-again/"/>
    <id>http://yoursite.com/2016/09/13/run-again/</id>
    <published>2016-09-13T08:54:40.000Z</published>
    <updated>2016-09-13T09:38:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>看了下校内网发现距离微调过了，于是开始划线。。</p>
<p><strong>long_run.py</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#coding=utf-8 </span></div><div class="line">ifo = &#123; <span class="number">1</span>:<span class="string">'体活'</span>, <span class="number">2</span>:<span class="string">'副馆'</span>, <span class="number">3</span>:<span class="string">'二教'</span>, <span class="number">4</span>:<span class="string">'九教'</span> &#125;</div><div class="line">data = &#123; <span class="string">'12'</span>:<span class="number">580</span>,<span class="string">'23'</span>:<span class="number">650</span>,<span class="string">'34'</span>:<span class="number">400</span>,<span class="string">'14'</span>:<span class="number">380</span> &#125;</div><div class="line">result = dict()</div><div class="line">aim = <span class="number">2000</span> <span class="comment"># m:2000 f:1500 </span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort</span><span class="params">(s)</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="string">''</span>.join((<span class="keyword">lambda</span> x:(x.sort(),x)[<span class="number">1</span>])(list(s)))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">()</span>:</span></div><div class="line">    rec(<span class="string">''</span>,<span class="number">0</span>)</div><div class="line">    keys = sorted(result, key=<span class="keyword">lambda</span> k:result[k])</div><div class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> keys:</div><div class="line">        <span class="keyword">print</span> result[k], k</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">rec</span><span class="params">(path, dis)</span>:</span></div><div class="line">    <span class="keyword">if</span> dis &gt;= aim:</div><div class="line">        result[path[:<span class="number">-2</span>]] = dis</div><div class="line">        <span class="keyword">return</span></div><div class="line">    <span class="keyword">if</span> path == <span class="string">''</span>:</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">'1234'</span>:</div><div class="line">            rec(i, <span class="number">0</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">if</span> len(path) &gt; <span class="number">2</span>:</div><div class="line">            dis_key = sort(path[<span class="number">-3</span>]+path[<span class="number">-1</span>])</div><div class="line">            dis = dis + data[sort(dis_key)]</div><div class="line">        <span class="keyword">if</span> path[<span class="number">-1</span>] <span class="keyword">in</span> <span class="string">'13'</span>:</div><div class="line">            rec(path+<span class="string">'-2'</span>, dis)</div><div class="line">            rec(path+<span class="string">'-4'</span>, dis)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            rec(path+<span class="string">'-1'</span>, dis)</div><div class="line">            rec(path+<span class="string">'-3'</span>, dis)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    show()</div></pre></td></tr></table></figure>
<p><del>本来思路是用图的，感觉太麻烦换成树也行，但是突然发现自己已经差不多完全忘记数据结构了。后来回寝室翻翻书，最后还是用无脑递归，两节课没听就在搞这个东西。（汗）</del></p>
<p><strong>result：</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="number">2000</span> <span class="number">3</span><span class="number">-4</span><span class="number">-3</span><span class="number">-4</span><span class="number">-3</span><span class="number">-4</span></div><div class="line"><span class="number">2000</span> <span class="number">4</span><span class="number">-3</span><span class="number">-4</span><span class="number">-3</span><span class="number">-4</span><span class="number">-3</span></div><div class="line"><span class="number">2010</span> <span class="number">1</span><span class="number">-2</span><span class="number">-3</span><span class="number">-4</span><span class="number">-1</span></div><div class="line"><span class="number">2010</span> <span class="number">1</span><span class="number">-4</span><span class="number">-3</span><span class="number">-2</span><span class="number">-1</span></div><div class="line"><span class="number">2010</span> <span class="number">3</span><span class="number">-4</span><span class="number">-1</span><span class="number">-2</span><span class="number">-3</span></div><div class="line"><span class="number">2010</span> <span class="number">2</span><span class="number">-3</span><span class="number">-4</span><span class="number">-1</span><span class="number">-2</span></div><div class="line"><span class="number">2010</span> <span class="number">4</span><span class="number">-1</span><span class="number">-2</span><span class="number">-3</span><span class="number">-4</span></div><div class="line"><span class="number">2010</span> <span class="number">4</span><span class="number">-3</span><span class="number">-2</span><span class="number">-1</span><span class="number">-4</span></div><div class="line"><span class="number">2010</span> <span class="number">2</span><span class="number">-1</span><span class="number">-4</span><span class="number">-3</span><span class="number">-2</span></div><div class="line"><span class="number">2010</span> <span class="number">3</span><span class="number">-2</span><span class="number">-1</span><span class="number">-4</span><span class="number">-3</span></div><div class="line"><span class="number">2030</span> <span class="number">3</span><span class="number">-4</span><span class="number">-3</span><span class="number">-2</span><span class="number">-1</span></div><div class="line"><span class="number">2030</span> <span class="number">1</span><span class="number">-2</span><span class="number">-3</span><span class="number">-4</span><span class="number">-3</span></div><div class="line"><span class="number">2080</span> <span class="number">3</span><span class="number">-2</span><span class="number">-3</span><span class="number">-4</span><span class="number">-1</span></div><div class="line"><span class="number">2080</span> <span class="number">1</span><span class="number">-4</span><span class="number">-3</span><span class="number">-2</span><span class="number">-3</span></div><div class="line"><span class="number">2100</span> <span class="number">4</span><span class="number">-3</span><span class="number">-2</span><span class="number">-3</span><span class="number">-4</span></div><div class="line"><span class="number">2100</span> <span class="number">1</span><span class="number">-4</span><span class="number">-1</span><span class="number">-4</span><span class="number">-1</span><span class="number">-2</span></div><div class="line"><span class="number">2100</span> <span class="number">3</span><span class="number">-4</span><span class="number">-3</span><span class="number">-2</span><span class="number">-3</span></div><div class="line"><span class="number">2100</span> <span class="number">2</span><span class="number">-1</span><span class="number">-4</span><span class="number">-1</span><span class="number">-4</span><span class="number">-1</span></div><div class="line"><span class="number">2100</span> <span class="number">3</span><span class="number">-2</span><span class="number">-3</span><span class="number">-4</span><span class="number">-3</span></div><div class="line">...</div></pre></td></tr></table></figure></p>
<p>2000m…恕我眼拙注意有个整数400……平时跑的那条路变成1800+m不再考虑，等于原来二九要跑4趟的，现在变成5趟了，跑5趟也太蠢了吧，一个点要刷3次卡？万一排队怎么办？</p>
<p>所有的2010m结果其实是一样的，8种不同的姿势跑一周而已。</p>
<p>另外从去年的经验看，请尽量避免二教这个点，排队人数极其容易50+，导致速度不够从而…</p>
<p>另附女生的新路线</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="number">1520</span> <span class="number">1</span><span class="number">-4</span><span class="number">-1</span><span class="number">-4</span><span class="number">-1</span></div><div class="line"><span class="number">1520</span> <span class="number">4</span><span class="number">-1</span><span class="number">-4</span><span class="number">-1</span><span class="number">-4</span></div><div class="line"><span class="number">1540</span> <span class="number">1</span><span class="number">-2</span><span class="number">-1</span><span class="number">-4</span></div><div class="line"><span class="number">1540</span> <span class="number">4</span><span class="number">-1</span><span class="number">-2</span><span class="number">-1</span></div><div class="line"><span class="number">1540</span> <span class="number">3</span><span class="number">-4</span><span class="number">-1</span><span class="number">-4</span><span class="number">-1</span></div><div class="line"><span class="number">1540</span> <span class="number">1</span><span class="number">-4</span><span class="number">-1</span><span class="number">-4</span><span class="number">-3</span></div><div class="line"><span class="number">1560</span> <span class="number">3</span><span class="number">-4</span><span class="number">-1</span><span class="number">-4</span><span class="number">-3</span></div><div class="line"><span class="number">1560</span> <span class="number">4</span><span class="number">-1</span><span class="number">-4</span><span class="number">-3</span><span class="number">-4</span></div><div class="line"><span class="number">1560</span> <span class="number">1</span><span class="number">-4</span><span class="number">-3</span><span class="number">-4</span><span class="number">-1</span></div><div class="line"><span class="number">1560</span> <span class="number">4</span><span class="number">-3</span><span class="number">-4</span><span class="number">-1</span><span class="number">-4</span></div><div class="line"><span class="number">1580</span> <span class="number">3</span><span class="number">-4</span><span class="number">-3</span><span class="number">-4</span><span class="number">-1</span></div><div class="line"><span class="number">1580</span> <span class="number">1</span><span class="number">-4</span><span class="number">-3</span><span class="number">-4</span><span class="number">-3</span></div><div class="line"><span class="number">1600</span> <span class="number">3</span><span class="number">-4</span><span class="number">-3</span><span class="number">-4</span><span class="number">-3</span></div><div class="line"><span class="number">1600</span> <span class="number">4</span><span class="number">-3</span><span class="number">-4</span><span class="number">-3</span><span class="number">-4</span></div><div class="line"><span class="number">1610</span> <span class="number">4</span><span class="number">-1</span><span class="number">-2</span><span class="number">-3</span></div><div class="line"><span class="number">1610</span> <span class="number">3</span><span class="number">-2</span><span class="number">-1</span><span class="number">-4</span></div><div class="line"><span class="number">1630</span> <span class="number">4</span><span class="number">-3</span><span class="number">-2</span><span class="number">-1</span></div><div class="line"><span class="number">1630</span> <span class="number">1</span><span class="number">-2</span><span class="number">-3</span><span class="number">-4</span></div><div class="line">...</div></pre></td></tr></table></figure>
<p><del>最短路线居然他喵的没变</del></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看了下校内网发现距离微调过了，于是开始划线。。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;long_run.py&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div 
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>立项报告：实验班交流论坛</title>
    <link href="http://yoursite.com/2016/09/12/%E7%AB%8B%E9%A1%B9%E6%8A%A5%E5%91%8A%EF%BC%9A%E5%AE%9E%E9%AA%8C%E7%8F%AD%E4%BA%A4%E6%B5%81%E8%AE%BA%E5%9D%9B/"/>
    <id>http://yoursite.com/2016/09/12/立项报告：实验班交流论坛/</id>
    <published>2016-09-12T05:55:52.000Z</published>
    <updated>2016-09-18T06:40:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目简介">项目简介</h1><p>名称：实验班交流论坛</p>
<p>提交人：金云天小组</p>
<h1 id="项目背景与意义">项目背景与意义</h1><p>设立实验班交流论坛，是为了促进内部交流，内外交流，鼓励分享，活跃技术氛围</p>
<h1 id="项目用户">项目用户</h1><ul>
<li>面向全师生，质量驱动，通过高质量回答、发表优质文章来获取声望，从而获得更高的权限</li>
</ul>
<h1 id="项目功能">项目功能</h1><h2 id="声望系统">声望系统</h2><ul>
<li>基于声望值给予对应的行为规范，如支持与反对等</li>
</ul>
<h2 id="问答系统">问答系统</h2><ul>
<li>鼓励具有高质量、代表性的提问，及高质量的回答</li>
</ul>
<h2 id="发表文章">发表文章</h2><ul>
<li>鼓励用户发表文章</li>
</ul>
<h2 id="内部公告与通知管理">内部公告与通知管理</h2><ul>
<li>公告看板</li>
<li>站点短消息</li>
<li>与第三方消息系统的集成，如email、微博、微信等</li>
</ul>
<h2 id="用户档案管理">用户档案管理</h2><ul>
<li>注册与登录</li>
<li>权限</li>
<li>通讯录与档案，如项目记录、github、博客地址等等</li>
</ul>
<h1 id="项目实现方案">项目实现方案</h1><blockquote>
<p>基本的系统架构与技术路线</p>
</blockquote>
<h2 id="系统架构">系统架构</h2><p>典型的BS架构，以浏览器的使用为主。目前主要以PC端交互为主，但部分关键或常用功能应保证移动WEB兼容性。同时，在技术架构上，应考虑全端支持的可扩展性。</p>
<h2 id="技术路线">技术路线</h2><ul>
<li>后端采用以 Flask 为中心的框架，</li>
<li>数据库使用主流sql数据库MySQL</li>
<li>开发环境，完全基于*nix平台的开发、部署与运维</li>
</ul>
<h1 id="项目成员与分工">项目成员与分工</h1><ul>
<li><p>金云天 </p>
<ul>
<li>项目负责人：项目策划与管理、团队管理、负责整体技术架构</li>
<li>后端开发、运维、部署、运维等</li>
</ul>
</li>
<li><p>余小兰 </p>
<ul>
<li>前台开发：参与各关键功能的开发，web独立开发</li>
</ul>
</li>
</ul>
<h1 id="项目的学习价值">项目的学习价值</h1><p>本应用是典型的基于WEB的信息管理应用，利于掌握WEB应用开发的基本要素和技术<br>Flask是最好的WEB后端开发框架，其涉及的各种设计模式与开发技术，是后端工程师的必备技能。</p>
<h1 id="可行性分析">可行性分析</h1><ul>
<li>该项目来源于我们正在进行的实践，持续的需求和即时的用户反馈将会推动项目的健康发展 </li>
</ul>
<h1 id="难点与风险">难点与风险</h1><ul>
<li>需求并未定型，除了技术能力，还需要产品设计能力</li>
<li>工作量可能过大</li>
<li>….</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;项目简介&quot;&gt;项目简介&lt;/h1&gt;&lt;p&gt;名称：实验班交流论坛&lt;/p&gt;
&lt;p&gt;提交人：金云天小组&lt;/p&gt;
&lt;h1 id=&quot;项目背景与意义&quot;&gt;项目背景与意义&lt;/h1&gt;&lt;p&gt;设立实验班交流论坛，是为了促进内部交流，内外交流，鼓励分享，活跃技术氛围&lt;/p&gt;
&lt;h1 id=&quot;项
    
    </summary>
    
    
      <category term="实验班" scheme="http://yoursite.com/tags/%E5%AE%9E%E9%AA%8C%E7%8F%AD/"/>
    
  </entry>
  
  <entry>
    <title>我为暑假续一秒</title>
    <link href="http://yoursite.com/2016/08/30/16Aug/"/>
    <id>http://yoursite.com/2016/08/30/16Aug/</id>
    <published>2016-08-30T15:43:55.000Z</published>
    <updated>2016-09-02T04:42:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python3">Python3</h1><p><a href="https://github.com/imxana/show-me-the-code" target="_blank" rel="external">imxana/show-me-the-code</a></p>
<p>部分练习 ( 0~13, 21, 22 )</p>
<h1 id="Linux">Linux</h1><p><a href="https://github.com/imxana/shell_test" target="_blank" rel="external">imxana/shell_test</a></p>
<p>《Linux Shell脚本攻略》学习代码（更新中），顺便一提作者是一个20岁的印度大学生</p>
<h1 id="邮箱迁移">邮箱迁移</h1><p>New_email: <a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#x78;&#x61;&#x6e;&#97;&#46;&#x61;&#x77;&#97;&#x6b;&#x65;&#x6e;&#64;&#103;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#109;">&#x78;&#x61;&#x6e;&#97;&#46;&#x61;&#x77;&#97;&#x6b;&#x65;&#x6e;&#64;&#103;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a></p>
<p>部分迁移情况</p>
<table>
<thead>
<tr>
<th>item</th>
<th>state</th>
</tr>
</thead>
<tbody>
<tr>
<td>Aliyun</td>
<td>√</td>
</tr>
<tr>
<td>Amazon</td>
<td>√</td>
</tr>
<tr>
<td>AppCan</td>
<td>remove</td>
</tr>
<tr>
<td>Apple</td>
<td>√</td>
</tr>
<tr>
<td>Coding</td>
<td>√</td>
</tr>
<tr>
<td>Docker Cloud</td>
<td>√</td>
</tr>
<tr>
<td>Facebook</td>
<td>√</td>
</tr>
<tr>
<td>Github</td>
<td>√</td>
</tr>
<tr>
<td>Instagram</td>
<td>√</td>
</tr>
<tr>
<td>iturning</td>
<td>√</td>
</tr>
<tr>
<td>Leap Motion</td>
<td>√</td>
</tr>
<tr>
<td>Microsoft</td>
<td>remove</td>
</tr>
<tr>
<td>Segmentfault</td>
<td>√</td>
</tr>
<tr>
<td>Steam</td>
<td>√</td>
</tr>
<tr>
<td>Twitter</td>
<td>√</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python3&quot;&gt;Python3&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/imxana/show-me-the-code&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;imxana/show-me-the-code&lt;
    
    </summary>
    
    
      <category term="others" scheme="http://yoursite.com/tags/others/"/>
    
  </entry>
  
  <entry>
    <title>月亮忘记了</title>
    <link href="http://yoursite.com/2016/08/19/moon/"/>
    <id>http://yoursite.com/2016/08/19/moon/</id>
    <published>2016-08-19T12:18:48.000Z</published>
    <updated>2016-08-19T15:33:08.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>看见的，看不见了。<br>夏风轻轻吹过，在瞬间消失无踪，<br>记住的，遗忘了。<br>只留下一地微微晃动的迷离树影……</p>
<p>看不见的，是不是就等于不存在？<br>也许只是被浓云遮住，<br>也许刚巧风砂飞入眼帘，<br>我看不见你，<br>却依然感到温暖。</p>
</blockquote>
<p>每一个黄昏过后，大家焦虑地等待，却再也没有等到月亮升起。</p>
<p>潮水慢慢平静下来，海洋凝固成一面漆黑的水镜，没有月亮的夜晚，世界变的清冷幽寂。</p>
<p>正要登陆月球的太空船，在星海中迷航，没有人知道他们在哪里。</p>
<p>科学家沮丧得发狂，国王像孩子般无助地望着天空发呆。没有人知道该怎么办。</p>
<p>电视不断重复播报月亮失踪的消息，世界末日的恐慌瞬间弥漫全球。</p>
<p>还好，月亮出来了。</p>
<p>一车车微笑的月亮，运往每个哀伤的黑暗城市。</p>
<p>莹润可爱的月亮，发出温柔的光芒，焦虑的人们，暂时忘记了害怕。</p>
<p>它们永远不会忧伤，它们永远带着甜蜜笑容。</p>
<p>从窗口望出去，又可以看到皎洁的明月，世界又恢复一片欢乐。</p>
<blockquote>
<p>他们在无意间相遇，<br>却为幽暗的生命带来温柔美好的光亮。</p>
</blockquote>
<p>男孩为他包上柔软的毛巾。点上一盏小灯为他取暖。<br>将他抱在怀中，轻轻摇晃。温柔地为他唱歌，对他说话。月亮慢慢地睁开眼睛，发出一点幽微的光亮。</p>
<p>一开始，他像个婴儿般地只会左右晃动，光芒忽明忽灭<br>。</p>
<p>慢慢地，他学会滚动，顽皮地在屋里四处走动。</p>
<p>午夜时分，他偶尔会不由自主地飘了起来，但他有些怕高。</p>
<p>他的光芒，每天都有小小的变化。</p>
<p>他安安静静、慢慢地长大了。</p>
<p>太阳出来时，他总是晦暗地沉睡不醒。</p>
<p>太阳下山后，却精神抖擞地清亮起来。</p>
<p>他们躲进妈妈的衣柜，想象掉落神秘无底的黑洞。<br>妈妈一直都找不到他。</p>
<p>他们在海上漂流了三天三夜，还遇到海啸与恐怖的鲨鱼。<br>妈妈忙得没空来救他。</p>
<p>他们脸上涂满颜色，做出可怕的表情，还大声尖叫。<br>妈妈却一点也没有被吓着。</p>
<p>月亮学会空中旋转的那个晚上，他们在窗前整夜跳舞。<br>妈妈早就累得睡着了。</p>
<p>世界停电的夜晚，他们爬到屋顶。静静欣赏黑暗世界的惊喜。<br>没有人与他们分享这神秘安静的时刻。</p>
<p>渐渐地，男孩上学总是迟到，<br>上课总是沉沉睡去。</p>
<p>渐渐地，他的朋友愈来愈少。</p>
<p>他跟月亮也愈来愈孤单。</p>
<p>“你是天上掉下来的月亮吗？”<br>“你记得你的家在哪里吗？”<br>“你害怕一个人回到天空吗？”<br>白云缓缓飘过，小鸟在林中唱着忧伤的歌曲，天色渐渐暗了下来。</p>
<p>他们发现池塘的小鱼，在月亮靠近时，会微笑着朝他游过来。</p>
<p>草丛里飞舞的萤火虫，就好像在人间起舞的点点繁星。</p>
<p>他们喜欢在雨中散步，聆听雨水滴滴答答落在伞面的清脆声音。</p>
<p>秘密基地里的玫瑰花，在夜晚幽幽绽放迷人的花香。</p>
<p>男孩打电话给在远方的爸爸，兴奋地诉说：“我有一个真正的月亮喔，当我快乐或难过的时候，他都会陪着我，我要永远和他在一起……”<br>爸爸只是回答：“要乖乖地听妈妈的话。”</p>
<p>日子一切如常，路灯不断增加。<br>科学家有着更多解不开的困惑，<br>太空人依旧在星际里迷航……</p>
<p>公园里的大树毫无来由地突然枯萎，叶子在瞬间落尽，暗淡无光地月亮垂挂在树上，萧瑟地迎风摇晃。</p>
<p>河水不再流动，宛如一滩死水。<br>天气变得十分怪异，在热天午后，竟飘起了漫天大雪。</p>
<p>街边角落堆满了丢弃的月亮。城市里似乎隐匿着各式各样的怪兽，处处充满着危机，每个人的情绪似乎都变得异常暴烈。</p>
<blockquote>
<p>记住的是不是永远不会消失？<br>我守护如泡沫般脆弱的梦境，<br>快乐才刚开始，悲伤却早已潜伏而来。</p>
</blockquote>
<p>早上，校长演讲时说：“世界上本来就不需要月亮，小朋友不要……”<br>讲到这里，他忽然口吐白沫，倒地不起。可怕的是，没有人想要去救他。</p>
<p>放学时，老师生气地对男孩说：“明天请妈妈到学校来一趟。”<br>并要求他不要再带着月亮到学校来了。</p>
<p>傍晚，爸爸打电话来，他和妈妈讲了好久，妈妈却始终一言不发。<br>晚上，房间里传来低声的啜泣，屋里的气氛安静得令人感到窒息。</p>
<p>世界好像被宇宙遗弃了。</p>
<blockquote>
<p>但是，最深的黑夜即将过去，<br>你看，月亮出来了。</p>
</blockquote>
<p>一夜之间，月亮记起许多往事，飘到高空时也不再感到害怕。</p>
<p>但他却再也无法回到男孩的家。</p>
<p>他飘到窗外，看着熟悉的景物，着急的发出低沉的呜咽。<br>男孩更是难过得俯在墙角大声哭泣。</p>
<p>暴风雨来了，<br>男孩忧伤地问：“你还想听听伞下的雨声吗？”<br>月亮点点头。<br>他替月亮撑起一把伞。<br>雨，滴滴答答地敲出轻快的旋律。</p>
<p>黄昏的时候，一阵突来的狂风，将他们吹得好高好远，他紧紧抱住他的月亮。</p>
<p>风在耳边尖锐地呼啸，雨不断地迎面打来。</p>
<p>他们奋力穿过一层层浓密的乌云，不知过了多久，世界突然安静下来。</p>
<p>所有的喧闹在瞬间退至远方，<br>所有的烦恼消失无踪，<br>点点星光在四周缓缓流动，<br>他们感到非常欢乐。</p>
<p>月亮轻轻地转动，男孩慢慢地睡着，<br>梦里依稀闻到一股淡淡的百合花香。</p>
<blockquote>
<p>看不见的，看见了。<br>夏风轻轻吹过，草丛树叶翻舞飞扬。<br>遗忘的，记住了。<br>乌云渐渐散去，一道柔和的月光洒落在窗前……</p>
</blockquote>
<p>(完)</p>
<blockquote>
<p>梗概：</p>
<p>看不见的，是不是就等于不存在？<br>记住的，是不是永远不会消失？</p>
<p>每一个黄昏过后，大家焦虑地等待，却再也没有等到月亮升起。<br>潮水慢慢平静下来，海洋凝固成一面漆黑的水镜，没有月亮的夜晚，世界变得凄冷幽寂。</p>
<p>但是，最深的黑夜即将过去，月亮出来了……</p>
</blockquote>
<p>— 1999年几米画本《月亮忘记了》</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;看见的，看不见了。&lt;br&gt;夏风轻轻吹过，在瞬间消失无踪，&lt;br&gt;记住的，遗忘了。&lt;br&gt;只留下一地微微晃动的迷离树影……&lt;/p&gt;
&lt;p&gt;看不见的，是不是就等于不存在？&lt;br&gt;也许只是被浓云遮住，&lt;br&gt;也许刚巧风砂飞入眼帘，&lt;br&gt;我看不见你，&lt;b
    
    </summary>
    
    
      <category term="others" scheme="http://yoursite.com/tags/others/"/>
    
  </entry>
  
  <entry>
    <title>react-native不完全避坑指南(Android版)</title>
    <link href="http://yoursite.com/2016/07/23/react-native-avoid-mistake-android/"/>
    <id>http://yoursite.com/2016/07/23/react-native-avoid-mistake-android/</id>
    <published>2016-07-23T02:57:56.000Z</published>
    <updated>2016-07-24T07:47:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Pre">Pre</h1><p>Android Studio在windows上的安装部署让我在大一的时候放弃了安卓，在mac上as的表现尚可，部署工程也变得不是那么坑了。</p>
<p>我们继续研究bitch项目</p>
<p>首先用AS(version 2.1)打开bitch下的的android文件夹，然后等上一段时间更新。。。具体问题可能会发生例如某些模块需要科学下载，但是OSX上基本不会有环境配置等诸多问题。</p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.23/1.png" alt=""></p>
<h1 id="坑">坑</h1><h2 id="工程路径">工程路径</h2><p>记得打开的是<code>android</code>文件夹，而不是<code>bitch</code>文件夹，否则识别不出安卓工程，虽然部分功能可用。</p>
<p>遇到错误</p>
<p><code>Error running app: Instant Run requires &#39;Tools | Android | Enable ADB integration&#39; to be enabled.</code></p>
<p>时记得勾选 Tools -&gt; Android -&gt; Enable ADB integration</p>
<h2 id="AS里的Android版本">AS里的Android版本</h2><p>我使用的版本是N，开始我认为为了适配国内手机尽量选低版本，于是装了N、23和19，但是最后发现只有N版本才能成功在AS上跑，现在发现23版本也能运行。</p>
<p><strong>Nexus 5X API N</strong></p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.23/2.png" alt=""></p>
<p><strong>Nexus 5X API 23</strong></p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.23/3.png" alt=""></p>
<p><strong>Galaxy Nexus API 19还是跑不了（无限编译至timeout）</strong></p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.23/4.png" alt=""></p>
<p>原因其实我并不是很了解，可能与版本有关，可能与机型有关。但是react-native理论上适配所有机型，也避免了魅族坑:)</p>
<p>但是如果只能高版本模拟器进行测试的话，估计低版本真机测试的时候又会出现这样那样的问题。</p>
<p>真机调试待更。。</p>
<h2 id="模拟器">模拟器</h2><p>Mac上可以直接在<code>Application/Xcode.app/Contents/Developer/Application/</code>中或者Alfred、spotlight中搜索simulator来打开Simulator.app，每个尺寸的simulator都是一个独立的device，会保存之前使用过的应用、本地数据，都会保存在对应device中。这就让后续开发绕过了Xcode，以延长电脑寿命（雾</p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.23/18.png" alt="启动模拟器"></p>
<p>Android Studio通过启动AVD manager来启动各种型号的安卓模拟器</p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.23/11.png" alt="就是这个东西"></p>
<p>要去绕过AS启动它<del>以延长Mac寿命</del>，首先找到AS的sdk下的tools</p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.23/12.png" alt=""></p>
<p>然后注意到emulator这个可执行文件。。执行它发现似乎需要参数</p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.23/13.png" alt=""></p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.23/14.png" alt=""></p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.23/15.png" alt=""></p>
<p>提示我到<code>$HOME/.android/avd</code>下去寻找模拟器</p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.23/16.png" alt=""></p>
<p>把需要的模拟器复制过来</p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.23/17.png" alt=""></p>
<p>模拟器就开始运行了，撒花（雾）。我这里提示该升级了</p>
<h1 id="总结">总结</h1><p>为了同时适配谷歌和苹果，尽量使用react-native标准模块，而不是原生模块，虽然是<br><code>Learn once, write everywhere</code>，我觉得更像是<code>install once, write everywhere</code>，所有的坑，在APP成功安装运行一次后，就把重心完全放到了js上。<del>好吧不仅限于上个月iPhone版本更新以后APP找不到DiskImage直接闪退，手机上20多个demo全部GG</del></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Pre&quot;&gt;Pre&lt;/h1&gt;&lt;p&gt;Android Studio在windows上的安装部署让我在大一的时候放弃了安卓，在mac上as的表现尚可，部署工程也变得不是那么坑了。&lt;/p&gt;
&lt;p&gt;我们继续研究bitch项目&lt;/p&gt;
&lt;p&gt;首先用AS(version 2.1)
    
    </summary>
    
    
      <category term="reactnative" scheme="http://yoursite.com/tags/reactnative/"/>
    
  </entry>
  
  <entry>
    <title>Sorry</title>
    <link href="http://yoursite.com/2016/07/23/sorry/"/>
    <id>http://yoursite.com/2016/07/23/sorry/</id>
    <published>2016-07-22T16:11:51.000Z</published>
    <updated>2016-07-22T16:39:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="抱歉">抱歉</h1><p>这是我对同学（尤其是一些“不善”待人接物的可爱的同学）们交流的问题的总结。如果你看到这段话，大概是我对你的言行稍有不适。当然我没有恶意。只是希望我们能更高效而优雅的交流。</p>
<p>如果你不幸中枪，请不要生气，不管你后来的行为如何，这段话都将不会出现第二次，因为我会尽量避免与你交流（苦笑</p>
<h1 id="关于询问">关于询问</h1><p>这是一个需要安全感的时代，安全感在陌生人直接意味着信息对等和尊重。我讨厌任何让人处于感觉不安全的状态的行为。</p>
<h2 id="错误示例">错误示例</h2><p>在吗 （n小时回复在后）在吗（又n小时回复在后）没事了/挥手</p>
<p>你是xxx吗。哦</p>
<p>这题…怎么做？</p>
<p>同学你很帅…代码能发我一份吗</p>
<h2 id="正确示例">正确示例</h2><p>现在过来，不来的话（解决方案a，b…<br>[给出备用方案]</p>
<p>我是xxx，你叫？我的博客是…，你的博客在哪？我没女朋友，你有女朋友吗？（雾）<br>[交流信息对等]</p>
<p>您好我有一个问题a，这是我Google/百度过的结果（链接b），这是我尝试过的方案c…为什么出现了d…的结果呢？我猜是e…的结果但是f明明没问题QAQ<br>[之前尝试解决的具体过程]</p>
<p>（你有一个红包请查收）…代码能发我一份吗<br>[等价交换]</p>
<h1 id="关于对错">关于对错</h1><p>关于三观不和，观点不同，我是秉持这样一个态度：作为即上。</p>
<p>不作为的人，和一直沉默的人，是最可恶的人。善恶都是在作为，只是看的角度不同而已。</p>
<h2 id="错误示例-1">错误示例</h2><p>我有一个idea，我们来做吧！</p>
<p>这个logo太高了，这个字太大了，这个排版不太好，这里应该放一个XX，反正这样总感觉是不对的…</p>
<p>这个我不会啊。。。</p>
<h2 id="正确示例-1">正确示例</h2><p>(我之前有一个idea，) 我做了一个demo，大家来看看怎么样？<br>[Show me the code, or STFU.]</p>
<p>（发了个p图）改成这样如何？<br>[Action talks.]</p>
<p>这个我不会啊。。。因为我确实xxx不行<br>[非主观原因]</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;抱歉&quot;&gt;抱歉&lt;/h1&gt;&lt;p&gt;这是我对同学（尤其是一些“不善”待人接物的可爱的同学）们交流的问题的总结。如果你看到这段话，大概是我对你的言行稍有不适。当然我没有恶意。只是希望我们能更高效而优雅的交流。&lt;/p&gt;
&lt;p&gt;如果你不幸中枪，请不要生气，不管你后来的行为如何，
    
    </summary>
    
    
      <category term="others" scheme="http://yoursite.com/tags/others/"/>
    
  </entry>
  
  <entry>
    <title>react-native不完全避坑指南(iOS版)</title>
    <link href="http://yoursite.com/2016/07/22/react-native-avoid-mistake/"/>
    <id>http://yoursite.com/2016/07/22/react-native-avoid-mistake/</id>
    <published>2016-07-22T13:57:58.000Z</published>
    <updated>2016-07-22T16:03:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装测试">安装测试</h1><p>RN发展的非常非常快，在我写这篇文章（7月22日 星期五）的时候已经更新到0.30版本了</p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.22/2.png" alt=""></p>
<p>版本发展的太快，导致新手在使用RN时，参考的文档会不可避免的发生一些版本更迭导致的错误（比如语法全面转向ES6等），下面就以0.30为例，我重新写一个RN项目，取名为bitch</p>
<p>首先更新RN版本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g react-native-cli</div></pre></td></tr></table></figure>
<p>测试安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">react-native init bitch</div><div class="line"><span class="built_in">cd</span> bitch</div></pre></td></tr></table></figure>
<p>查看package.json</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">~/workspace/reactnative/bitch » cat package.json </div><div class="line">&#123;</div><div class="line">  <span class="string">"name"</span>: <span class="string">"bitch"</span>,</div><div class="line">  <span class="string">"version"</span>: <span class="string">"0.0.1"</span>,</div><div class="line">  <span class="string">"private"</span>: <span class="literal">true</span>,</div><div class="line">  <span class="string">"scripts"</span>: &#123;</div><div class="line">    <span class="string">"start"</span>: <span class="string">"node node_modules/react-native/local-cli/cli.js start"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"dependencies"</span>: &#123;</div><div class="line">    <span class="string">"react"</span>: <span class="string">"15.2.1"</span>,</div><div class="line">    <span class="string">"react-native"</span>: <span class="string">"0.30.0"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>直接运行iOS模拟器脚本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">react-native run-ios</div></pre></td></tr></table></figure>
<p>可能会卡一段时间，当前会执行安装iOS APP的脚本，另一个弹出的是node后端，关于所有APP的信息都放在这个服务器上。之后毫无疑问的，渲染出来一个iPhone6的界面应用<img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.22/3.png" alt=""></p>
<p>然后官方文档就开始撒花了。(懵逼</p>
<h1 id="坑">坑</h1><h2 id="node路径_问题">node路径 问题</h2><p>我们在使用xcode进行应用安装时，如果你是一个好的jser，会使用nvm(node version manager)管理node版本，但是通过修改.zshrc加入node环境变量启动的话，shell会找不到<code>node</code>命令，xcode会显示build failed，此时要到项目的Build Phases 里去找到shell中的node路径，具体可以通过<code>where node</code> or <code>which node</code>命令查看 <img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.22/4.png" alt=""></p>
<h2 id="真机测试Bug">真机测试Bug</h2><p>关于真机调试，中文官方文档是这样说的：<br><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.22/5.png" alt="http://reactnative.cn/docs/0.28/debugging.html#content"><br>然而实际上要到<code>AppDelegate.m</code>去修改localhost为本机IP才会生效，修改<code>RCTWebSocketExecutor.m</code>没有实质作用(0.27版本)，然而在0.30版本里似乎进行了优化，代码优化如下：</p>
<p>RCTWebSocketExecutor.m</p>
<p><strong>Before</strong></p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.22/6.png" alt=""></p>
<p><strong>After</strong></p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.22/7.png" alt=""></p>
<p>测试之后，发现似乎是真机调试时主动把本机IP自动替换localhost，因此不需要修改任何代码就可以进行真机调试</p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.7.22/8.png" alt="iPhone截图"></p>
<p>但是0.30版本前的项目还是会有这个坑。可以通过</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install --save react-native@0.30</div><div class="line">react-native upgrade</div></pre></td></tr></table></figure>
<p>进行项目更新</p>
<p>实际上，你的app只是一个js解释器，我可以在用一台服务器上开不同的后台让它变成不同的app，只要按装好一次app，就告别Xcode，用你喜欢的编辑器，比如vim，进行iOS的APP编写了。</p>
<h2 id="ES6">ES6</h2><p>其实这个不算一个坑，因为现在ES5是被兼容的。作为一个prototype的忠实用户，对于所有的oo语言是无法接受的，何必要包上一层糖纸去迎合那些没有class就活不下去的人呢？ES6的到来完全抢走了JS各种方言的饭碗，像之前很多人推荐的CoffeeScript、TypeScript。我大原型链指针灵活，继承自由，现在被强行规范化了。rn马上也要抛弃es5了，如果你没有接触过es5的话，那这个就不是一个坑，自动忽视掉之前版本的教程、官方/非官方例子就好。慢慢的习惯每个自定义view都用上class和它的构造函数吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装测试&quot;&gt;安装测试&lt;/h1&gt;&lt;p&gt;RN发展的非常非常快，在我写这篇文章（7月22日 星期五）的时候已经更新到0.30版本了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://coding.net/u/xana/p/yinyong/git/raw/master/i
    
    </summary>
    
    
      <category term="reactnative" scheme="http://yoursite.com/tags/reactnative/"/>
    
  </entry>
  
  <entry>
    <title>Mongoose使用小结</title>
    <link href="http://yoursite.com/2016/07/19/mongoose/"/>
    <id>http://yoursite.com/2016/07/19/mongoose/</id>
    <published>2016-07-19T05:38:10.000Z</published>
    <updated>2016-07-19T06:59:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Preview">Preview</h1><p>（张兄让我写一点收获，没办法，就写一点吧</p>
<h2 id="Wrting-">Wrting..</h2><p>暑假前的iOS俱乐部举行了一次夏令营，收获还是有的，认识了很多本校的学弟学妹，不过认识了几位有想法，有自己作品的朋友，在一起交流了很久，感觉大家虽然目的不同，但是走的路，挖的坑都是惊人的相似。但是大多数人都是来『玩』的，包括老师。期间一直在被很多小白叫大神，说实话我心里是极不舒服的。因为我本身就是个小白，是来系统、基础的学习一些平时途径学不到的东西的，本来是来学习交流的，结果变成来装X和开着热点自学的了。这些老师互相吹逼，我问了所谓技术大牛的老师一个reactnative的问题，他居然说完全不了解，好不容易上了一节关于技术的课，却又只涉及纯理论和大量的假设和推理。。宿舍WiFi超级差，又不稳定，最后老师干脆就不管了，66666</p>
<h2 id="Example">Example</h2><p><a href="https://github.com/imxana/db_test.git" target="_blank" rel="external">imxana/db_test</a></p>
<p>This is mongodb + nodejs, a universal backend, just tested for some showing demo..（火车上写的一点东西。。</p>
<h2 id="NoSQL">NoSQL</h2><p>MongoDB作为一个nosql型数据库，在数据模型使用方面，必须摆脱sql那种链式储存的思维。使用起来更加的自由，特别是JSON与JavaScript对象类型的亲和度非常高，使用时会让你更加的得心应手，而不是需要死记sql语句。一个储存对象就是JSONtree一个分支，可以无限延伸，因此可以存储相当复杂的树数据。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123; </div><div class="line">	<span class="string">"_id"</span> : ObjectId(<span class="string">"578319aab115df5938efcdf9"</span>), </div><div class="line">	<span class="string">"name"</span> : <span class="string">"Ruri"</span>, </div><div class="line">	<span class="string">"userid"</span> : <span class="string">"Yvo1D5X9p4c58GAJ"</span>, </div><div class="line">	<span class="string">"comments"</span> : &#123;</div><div class="line">		<span class="string">"a"</span>: &#123;&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="string">"__v"</span> : <span class="number">0</span> </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="mongoose-js?_mongodb-js?">mongoose.js? mongodb.js?</h2><p>Mongoose作为mongodb-node的一个封装API库，相比于mongo.js来说，它使用了Scheme来作为mongodb的collection的「骨架」，对于骨架具体化的model进行操作。而mongodb.js还是一样使用语句进行操作，这样可能会导致更多的代码，更多的错误。</p>
<h1 id="Quick_Start">Quick Start</h1><p>先假设情景，我需要一个用户模型，用于注册，登陆，储存用户ID(userid)和名字(name)</p>
<h2 id="intialize">intialize</h2><p>数据库初始化代码 db_init.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">mongodb</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">  <span class="keyword">var</span> userSchema = mongoose.Schema(&#123;</div><div class="line">    name: <span class="built_in">String</span>,</div><div class="line">    userid: <span class="built_in">String</span></div><div class="line">  &#125;)</div><div class="line">  mongoose.model(<span class="string">'user'</span>, userSchema);</div><div class="line"></div><div class="line">  mongoose.connect(<span class="string">'mongodb://localhost/db_test'</span>);</div><div class="line">  <span class="keyword">var</span> db = mongoose.connection</div><div class="line"></div><div class="line">  db.on(<span class="string">'error'</span>, <span class="built_in">console</span>.error.bind(<span class="built_in">console</span>, <span class="string">'connection error:'</span>));</div><div class="line">  db.once(<span class="string">'open'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">callback</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'MongoDB once opened..'</span>);</div><div class="line">  &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = mongodb;</div></pre></td></tr></table></figure>
<p>这段代码做了啥？首先引入mongoose模块，连接本地名为db_test的mongodb数据库(没有的话会自动创建)，然后监听错误和开启事件，之后新建了一个user模型userSchema，最后把这个模型注册给名称为’user’的collection。</p>
<h2 id="common_method">common method</h2><p>其他方法 db.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>);</div><div class="line"><span class="keyword">var</span> User = mongoose.model(<span class="string">'user'</span>);</div><div class="line"></div><div class="line"><span class="comment">// 1.add-work</span></div><div class="line"><span class="keyword">var</span> user = <span class="keyword">new</span> User();</div><div class="line">user.name = <span class="string">'Ruri'</span>;</div><div class="line">user.id = RandomID();</div><div class="line">user.save(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</div><div class="line">	<span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'User saved.'</span>);</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">// 2.search doc</span></div><div class="line">User.find(&#123;<span class="string">'name'</span>: <span class="string">'Ayase'</span>&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, users</span>) </span>&#123;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; users.length; i++) &#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="string">'ID:'</span> + users[i].userid);</div><div class="line">		<span class="built_in">console</span>.log(users[i].name);</div><div class="line">	&#125;;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 3.del doc</span></div><div class="line"><span class="comment">// '' is the ID</span></div><div class="line">Task.findById(<span class="string">'56037be2b3293deaa4a98477'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, user</span>) </span>&#123;</div><div class="line">	user.remove();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>user注册完毕后，取出已注册的user模型（未注册会报错），然后实例化user，调用模型的save方法，就能直接储存。也能直接传入参数save，等价于<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">new</span> User(&#123;name:<span class="string">'Ruri'</span>, id: RandomID()&#125;)</div><div class="line">.save(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</div><div class="line">	<span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'User saved.'</span>);</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>删除方法通常配合查询方法，这里只是简单涉及，具体查阅相关资料。<br>修改方法也配合查询方法，直接修改对象属性然后调用save即可，相当于mongodb语法里的$set（如果没记错的话）</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Preview&quot;&gt;Preview&lt;/h1&gt;&lt;p&gt;（张兄让我写一点收获，没办法，就写一点吧&lt;/p&gt;
&lt;h2 id=&quot;Wrting-&quot;&gt;Wrting..&lt;/h2&gt;&lt;p&gt;暑假前的iOS俱乐部举行了一次夏令营，收获还是有的，认识了很多本校的学弟学妹，不过认识了几位有想法，
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>我是如何失败地约束自己的</title>
    <link href="http://yoursite.com/2016/04/27/howictrlmyself/"/>
    <id>http://yoursite.com/2016/04/27/howictrlmyself/</id>
    <published>2016-04-27T13:20:55.000Z</published>
    <updated>2016-04-27T14:58:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我是如何失败地约束自己的">我是如何失败地约束自己的</h2><p>大约在初中的时候，我就发现了自己很严重的表演型人格。从懂事以来，别人的反应就是我做事的出发点，不管自己表现出什么样的情绪，总是要把它发挥到极致，并且要让最多的人看到。写这篇文章的目的，如果你觉得是其他原因，那应该就是那个原因，本文本意是为了尽量从第三方角度来阐述并且用聚光那个阴暗的自己。</p>
<p>这种表演型人格很有可能来自于我的家庭。我的母亲家里的人都是很在意自己利益的人，平时说话都是把自己说成是最无辜的，其他人是千方百计的要害他\她，哪怕是自己的直系亲属。我的母亲从小屈服于父母和两个弟弟，吃了很多苦，一直处于没有安全感的状态。可以出于这个原因，她说话一般都带有大量的假设与臆想，同样让我从小开始就没有安全感。小时候因为我只是偶然发现喜欢看书，家里就给我订了很多杂志，这又形成了我被动接受事情的习惯。我的父亲家庭比较不好，他属于懂事太早，比较倾向独自决策的类型。太有主见有个坏处，就是人容易受到情绪的干扰，于是经常会表现出很幼稚的行为，但是自己又不能承认是错的，就要闷不做声的擦屁股。</p>
<p>我的性格从形成之际，就显得有些格格不入，很明显的一点就是：『如果大家都选择了A，我会放弃A，花上大量的时间在B上，以此来满足自己的表演人格。』这一点让我非常的痛苦，常常我就把自己孤立出去了。然而我的人格又迫使我不愿意承认自己这是错的。于是和老师讨论哲学问题就成了从幼儿园开始每个学期必然的事情，直到高二才停止。</p>
<p>初中的记忆有些模糊，印象中是被很多人关注，然后被很多人失望，那个时候很多的决策都是一拍脑子做出的『最佳决策』，已经不能说是中二病了，比中二病羞耻的多。</p>
<p>我挺喜欢那个时候的自己的，因为我再也不可能回到那种充满激情的状态了。现在我看到非常叛逆但是胆子小的孩子，都会莫名的想亲近。那个时候非常喜欢听林肯公园，近乎到了痴迷的地步，LP的每一首歌我都会唱。看看LP的歌词，大概就能猜出那时候的状态。</p>
<p>高中整个三年的时候我再不停地排斥自己的表演型人格，具体表现为保持自己的大量独处时间（消除观众），开始不停的揭穿自我为了表演的实际目的（自我打击）。现在我替那个时候的自己深深的反省，虽然我想到了，但是我对我的认识还是不够。我的表演型人格已经深入骨髓，甚至开始为了揭穿自己的表演而表演。就如为了仅仅为了迎合而捏造的带常识错误的反鸡汤文章一样恶心。我陷入了一个自我表演的循环。歌词里说『我要摆脱你，做真正的我』，然而从哲学上说物必有根，不可能凭空产生。虽然我从未停止过思考这个问题，但是很长一段时间，我都不知道没了观众，我真正要为自己做什么，只能不断的为自己的决策买单。</p>
<p>一个人独处的时候，先是放纵，之后空虚，之后要么继续放纵，要么开始面对现实。从大学开始我意识到与人交流是一门基本课，不管是为了课堂学习，还是为了技术交流。我开始意识到不是每个人都足够了解自己，人不能救人，人只能自救。建立在利益上的友谊，比友谊上的利益要可靠的多。</p>
<p>我反省了一下大学的自己，对自己的要求是『比旁边的人厉害一点』，这样别人都会look upon  me。寒假的时候是花了点时间。但是我之前也说过，不要做井底之蛙。周围的人一旦开始咸鱼了，自己也跟着咸鱼了，而且每次玩过游戏以后都会散发大量罪恶感，却不去行动，给舍友带来大量负能量。</p>
<p>之前写过一篇关于吐槽大学生基本的待人接物的基本规范，但是后来想了一想还是删了。道德只能用于律己，不能律人。换个角度想，如果别人做了让你感到不舒服的事情，很有可能是他想表达的那件事情不重要，当做没听到也无妨。如果事情比较重要的话，他应该是会积极协商探讨的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;我是如何失败地约束自己的&quot;&gt;我是如何失败地约束自己的&lt;/h2&gt;&lt;p&gt;大约在初中的时候，我就发现了自己很严重的表演型人格。从懂事以来，别人的反应就是我做事的出发点，不管自己表现出什么样的情绪，总是要把它发挥到极致，并且要让最多的人看到。写这篇文章的目的，如果你觉得是
    
    </summary>
    
    
      <category term="Others" scheme="http://yoursite.com/tags/Others/"/>
    
  </entry>
  
  <entry>
    <title>水南照相馆技术支持文档</title>
    <link href="http://yoursite.com/2016/03/20/snzxg/"/>
    <id>http://yoursite.com/2016/03/20/snzxg/</id>
    <published>2016-03-20T14:51:48.000Z</published>
    <updated>2016-04-27T14:46:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>水南照相馆提供的便捷照片洗印服务，轻松快捷<br>1.在家中下单，立等可取！<br>2.多种照片大小，多种类型任您选择。<br>3.不定时超特价优惠，享受会员低价折扣。</p>
<h1 id="产品说明">产品说明</h1><p>本应用为用户提供水南照相馆的照片洗印在线订单提交服务，由于需要订单提交需要使用到在线支付，所以选择应用到支付宝的第三方支付平台。<br>消费群体:日常使用照片洗印服务的用户群</p>
<p>应用部分截图：</p>
<h1 id="接口使用情景">接口使用情景</h1><p>用户在选择好需要打印的照片后点击提交订单，此时需要调用到支付接口，对选择好的打印项目进行付费，付费完成后才提交订单至服务器。即在图二所示情景中会使用到支付宝第三方支付服务。</p>
<h1 id="资费情况">资费情况</h1><p>该服务不采取虚拟货币兑换，故为人民币1：1的资费模式。价格区间大概在0-500元。</p>
<h1 id="使用流程">使用流程</h1><h2 id="注册/登录">注册/登录</h2><p>用户可以通过 用户名/密码 注册或登录</p>
<ul>
<li>成功登录后，下次将自动登录该账号</li>
<li>支持QQ第三方登录</li>
<li>支持微信第三方登录</li>
</ul>
<h2 id="查询">查询</h2><p>用户可以随时查询自己的所有订单的打印状态。</p>
<h2 id="支付">支付</h2><p>用户通过积分支付，也可以通过支付宝支付。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;水南照相馆提供的便捷照片洗印服务，轻松快捷&lt;br&gt;1.在家中下单，立等可取！&lt;br&gt;2.多种照片大小，多种类型任您选择。&lt;br&gt;3.不定时超特价优惠，享受会员低价折扣。&lt;/p&gt;
&lt;h1 id=&quot;产品说明&quot;&gt;产品说明&lt;/h1&gt;&lt;p&gt;本应用为用户提供水南照相馆的照片洗印在线订单
    
    </summary>
    
    
      <category term="APP" scheme="http://yoursite.com/tags/APP/"/>
    
  </entry>
  
  <entry>
    <title>GitHub上用到几个iOS库</title>
    <link href="http://yoursite.com/2016/03/15/GitHub_iOS_lib/"/>
    <id>http://yoursite.com/2016/03/15/GitHub_iOS_lib/</id>
    <published>2016-03-15T05:57:34.000Z</published>
    <updated>2016-03-17T12:39:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目中用过的">项目中用过的</h1><p>使用一些集成库能帮你节省下大量的时间和代码量。</p>
<p>3.17 更新：添加测试使用的库 Reachability</p>
<h2 id="GMImagePicker">GMImagePicker</h2><p>iOS上的图片多选view，用GMImagePickerControllerDelegate中的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">- (void)assetsPickerController:(GMImagePickerController *)picker didFinishPickingAssets:(NSArray *)assetArray;</div></pre></td></tr></table></figure>
<p>方法拿到assetArray转型为PHAsset组</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[[PHImageManager defaultManager] requestImageDataForAsset:asset </div><div class="line">                                                  options:imageRequestOptions </div><div class="line">                                            resultHandler:^(NSData *imageData, NSString *dataUTI, UIImageOrientation orientation, NSDictionary *info) &#123;</div><div class="line">                                            // Do something with imageData...</div><div class="line">&#125;];</div></pre></td></tr></table></figure>
<p>拿到每张图片的NSData，保存在本地沙盒中</p>
<h2 id="MBProgressHUD">MBProgressHUD</h2><p>在需要花费较长时间的事件处理过程中，为了防止用户误操作，将用户界面锁定并显示进度条或提示。（锁定主线程，直到异步事件处理完毕）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[MBProgressHUD showHUDAddedTo:self.view animated:YES];</div><div class="line">dispatch_async(dispatch_get_global_queue( DISPATCH_QUEUE_PRIORITY_LOW, 0), ^&#123;</div><div class="line">	// Do something...</div><div class="line">	dispatch_async(dispatch_get_main_queue(), ^&#123;</div><div class="line">		[MBProgressHUD hideHUDForView:self.view animated:YES];</div><div class="line">	&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>If you need to configure the HUD you can do this by using the MBProgressHUD reference that showHUDAddedTo:animated: returns.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];</div><div class="line">hud.mode = MBProgressHUDModeAnnularDeterminate;</div><div class="line">hud.labelText = @&quot;Loading&quot;;</div><div class="line">[self doSomethingInBackgroundWithProgressCallback:^(float progress) &#123;</div><div class="line">	hud.progress = progress;</div><div class="line">&#125; completionCallback:^&#123;</div><div class="line">	[hud hide:YES];</div><div class="line">&#125;];</div></pre></td></tr></table></figure>
<h2 id="ZipArchive">ZipArchive</h2><p><strong>注意，不是重写过的 SSZipArchive</strong></p>
<p>Google写的zip解压缩工具，用于一次上传多个文件。注意在向zip添加文件的时候文件必须要在沙盒路径下，否则绝对路径只能读出(null)。（大坑，也是没有系统、基础的学习iOS的漏洞。）</p>
<p>tip：临时文件本身可以放在tmp文件下，作为自动处理的缓存，启动APP时会自动清理。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">- (NSString *) GetZip&#123;</div><div class="line">    ZipArchive* zip = [[ZipArchive alloc] init];</div><div class="line">    NSString *documentPath = NSTemporaryDirectory();</div><div class="line">    NSString* l_zipfile = [NSString stringWithFormat:@&quot;%@/tmp.zip&quot;,documentPath];</div><div class="line">    BOOL ret = [zip CreateZipFile2:l_zipfile];</div><div class="line">    for (int i=0; i&lt;imagesArray.count; i++) &#123;</div><div class="line">        NSString *imgURL = imagesArray[i];</div><div class="line">        ret = [zip addFileToZip:imgURL newname:[NSString stringWithFormat:@&quot;%d.PNG&quot;,i]];</div><div class="line">    &#125;</div><div class="line">    if( ![zip CloseZipFile2] )</div><div class="line">    &#123;</div><div class="line">        l_zipfile = @&quot;&quot;;  </div><div class="line">    &#125;</div><div class="line">    return l_zipfile;</div><div class="line">//    [zip release];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="想用但是放弃的">想用但是放弃的</h1><h2 id="iCarousel">iCarousel</h2><p>一个比较有名的旋转式选择界面库，可以使用它做出格式各样的3D选择界面，可以100%还原iPhone原生的app选择界面</p>
<h2 id="Material-Controls-For-iOS">Material-Controls-For-iOS</h2><p>仿照Android的原生Material样式的各种控件和逻辑过渡的重写，</p>
<h2 id="ios-material-design">ios-material-design</h2><p>点击view的某处或者button会用波浪式的颜色渲染过渡，很炫。</p>
<h1 id="外部链接">外部链接</h1><p>Reachability: <a href="https://github.com/tonymillion/Reachability.git" target="_blank" rel="external">tonymillion/Reachability</a><br>用于检测当前网络状态</p>
<p>ZipArchive: <a href="https://github.com/mattconnolly/ZipArchive.git" target="_blank" rel="external">mattconnolly/ZipArchive</a><br>只需要其中的miniZip, ZipArchive.h和ZipArchive.m</p>
<p>GMImagePicker: <a href="https://github.com/guillermomuntaner/GMImagePicker.git" target="_blank" rel="external">guillermomuntaner/GMImagePicker</a></p>
<p>MBProgressHUD: <a href="https://github.com/jdg/MBProgressHUD.git" target="_blank" rel="external">jdg/MBProgressHUD</a></p>
<p>Material-Controls-For-iOS: <a href="https://github.com/fpt-software/Material-Controls-For-iOS.git" target="_blank" rel="external">fpt-software/Material-Controls-For-iOS</a></p>
<p>ios-material-design: <a href="https://github.com/moqod/ios-material-design.git" target="_blank" rel="external">moqod/ios-material-design</a></p>
<p>iCarousel: <a href="https://github.com/nicklockwood/iCarousel.git" target="_blank" rel="external">nicklockwood/iCarousel</a></p>
<h1 id="附iOS尺寸规范">附iOS尺寸规范</h1><table border="1" cellspacing="0" cellpadding="0" style="text-align:center"><tbody><tr><td valign="top"><p align="center"><strong><span style="color:#984806"><span style="font-family:Microsoft YaHei; font-size:14px">设备</span></span></strong></p><p align="center"><strong><span style="color:#984806"><span style="font-family:Microsoft YaHei; font-size:14px">iPhone</span></span></strong></p></td><td valign="top"><p align="center"><strong><span style="color:#984806"><span style="font-family:Microsoft YaHei; font-size:14px">宽</span></span></strong></p><p align="center"><strong><span style="color:#984806"><span style="font-family:Microsoft YaHei; font-size:14px">Width</span></span></strong></p></td><td valign="top"><p align="center"><strong><span style="color:#984806"><span style="font-family:Microsoft YaHei; font-size:14px">高</span></span></strong></p><p align="center"><strong><span style="color:#984806"><span style="font-family:Microsoft YaHei; font-size:14px">Height</span></span></strong></p></td><td valign="top"><p align="center"><strong><span style="color:#984806"><span style="font-family:Microsoft YaHei; font-size:14px">对角线</span></span></strong></p><p align="center"><strong><span style="color:#984806"><span style="font-family:Microsoft YaHei; font-size:14px">Diagonal</span></span></strong></p></td><td valign="top"><p align="center"><strong><span style="font-family:Microsoft YaHei; font-size:14px"><span style="color:#984806">逻辑分辨率</span><span style="color:#984806">(point)</span></span></strong></p></td><td valign="top"><p align="center"><strong><span style="color:#984806"><span style="font-family:Microsoft YaHei; font-size:14px">Scale Factor</span></span></strong></p></td><td valign="top"><p align="center"><strong><span style="font-family:Microsoft YaHei; font-size:14px"><span style="color:#984806">设备分辨率</span><span style="color:#984806">(pixel)</span></span></strong></p></td><td valign="top"><p align="center"><strong><span style="color:#984806"><span style="font-family:Microsoft YaHei; font-size:14px">PPI</span></span></strong></p></td></tr><tr><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">3GS</span></p></td><td valign="top"><p align="left"><span style="font-family:Microsoft YaHei; font-size:14px">2.4 inches (62.1 mm)</span></p></td><td valign="top"><p align="left"><span style="font-family:Microsoft YaHei; font-size:14px">4.5 inches (115.5 mm)</span></p></td><td valign="top"><p align="left"><span style="font-family:Microsoft YaHei; font-size:14px">3.5-inch</span></p><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">&nbsp;</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">320x480</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">@1x</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">320x480</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">163</span></p></td></tr><tr><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">4(s)</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">2.31 inches (58.6 mm)</span></p></td><td valign="top"><p align="left"><span style="font-family:Microsoft YaHei; font-size:14px">4.5 inches (115.2 mm)</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">3.5-inch</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">320x480</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">@2x</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">640x960</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">326</span></p></td></tr><tr><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">5c</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">2.33 inches (59.2 mm)</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">4.90 inches (124.4 mm)</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">4-inch</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">320x568</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">@2x</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">640x1136</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">326</span></p></td></tr><tr><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">5(s)</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">2.31 inches (58.6 mm)</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">4.87 inches (123.8 mm)</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">4-inch</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">320x568</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">@2x</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">640x1136</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">326</span></p></td></tr><tr><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">6</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">2.64 inches (67.0 mm)</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">5.44 inches (138.1 mm)</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">4.7-inch</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">375x667</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">@2x</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">750x1334</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">326</span></p></td></tr><tr><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">6+</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">3.06 inches (77.8 mm)</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">6.22 inches (158.1 mm)</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">5.5-inch</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">414x736</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">@3x</span></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">(<span style="color:#7F7F7F">1242x2208</span>-&gt;)</span></p><p align="center"><strong><em><span style="font-family:Microsoft YaHei; font-size:14px">1080x1920</span></em></strong></p></td><td valign="top"><p align="center"><span style="font-family:Microsoft YaHei; font-size:14px">401&nbsp;</span></p></td></tr></tbody></table>



]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;项目中用过的&quot;&gt;项目中用过的&lt;/h1&gt;&lt;p&gt;使用一些集成库能帮你节省下大量的时间和代码量。&lt;/p&gt;
&lt;p&gt;3.17 更新：添加测试使用的库 Reachability&lt;/p&gt;
&lt;h2 id=&quot;GMImagePicker&quot;&gt;GMImagePicker&lt;/h2&gt;&lt;p&gt;i
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>这是我今年写过最烂的代码</title>
    <link href="http://yoursite.com/2016/01/12/worst_code_of_year/"/>
    <id>http://yoursite.com/2016/01/12/worst_code_of_year/</id>
    <published>2016-01-11T17:11:14.000Z</published>
    <updated>2016-07-22T16:44:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>（后注，一个GalGame的保存界面</p>
<p>IB的垃圾引用，fuck me</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">//  SaveViewController.swift</span></div><div class="line"><span class="comment">//  Yzk</span></div><div class="line"><span class="comment">//</span></div><div class="line"><span class="comment">//  Created by 极黑的夏纳 on 16/1/4.</span></div><div class="line"><span class="comment">//  Copyright © 2016年 xana. All rights reserved.</span></div><div class="line"><span class="comment">//</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> UIKit</div><div class="line"></div><div class="line"><span class="comment">// tofix:</span></div><div class="line"><span class="keyword">var</span> saves: [<span class="type">Int</span>?] = [<span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>];</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SaveViewController</span>: <span class="title">UIViewController</span>, <span class="title">UIPopoverPresentationControllerDelegate</span> </span>&#123;</div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> saveText1: <span class="type">UITextView</span>!</div><div class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> saveText2: <span class="type">UITextView</span>!</div><div class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> saveText3: <span class="type">UITextView</span>!</div><div class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> saveText4: <span class="type">UITextView</span>!</div><div class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> saveImageView1: <span class="type">UIImageView</span>!</div><div class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> saveImageView2: <span class="type">UIImageView</span>!</div><div class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> saveImageView3: <span class="type">UIImageView</span>!</div><div class="line">    <span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> saveImageView4: <span class="type">UIImageView</span>!</div><div class="line">    </div><div class="line"><span class="comment">//    private var saveImage1: UIImage? &#123;</span></div><div class="line"><span class="comment">//        get &#123; return saveImageView1.image &#125;</span></div><div class="line"><span class="comment">//        set &#123; saveImageView1.image = newValue &#125;</span></div><div class="line"><span class="comment">//    &#125;</span></div><div class="line"><span class="comment">//    private var saveImage2: UIImage? &#123;</span></div><div class="line"><span class="comment">//        get &#123; return saveImageView2.image &#125;</span></div><div class="line"><span class="comment">//        set &#123; saveImageView2.image = newValue &#125;</span></div><div class="line"><span class="comment">//    &#125;</span></div><div class="line"><span class="comment">//    private var saveImage3: UIImage? &#123;</span></div><div class="line"><span class="comment">//        get &#123; return saveImageView3.image &#125;</span></div><div class="line"><span class="comment">//        set &#123; saveImageView3.image = newValue &#125;</span></div><div class="line"><span class="comment">//    &#125;</span></div><div class="line"><span class="comment">//    private var saveImage4: UIImage? &#123;</span></div><div class="line"><span class="comment">//        get &#123; return saveImageView4.image &#125;</span></div><div class="line"><span class="comment">//        set &#123; saveImageView4.image = newValue &#125;</span></div><div class="line"><span class="comment">//    &#125;</span></div><div class="line">    </div><div class="line"><span class="comment">//    var SaveViewDatas: [[String: AnyObject?]] = [];</span></div><div class="line">    </div><div class="line">    <span class="comment">// todo:</span></div><div class="line"><span class="comment">//    private let defaults = NSUserDefaults.standardUserDefaults()</span></div><div class="line">    </div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</div><div class="line">       </div><div class="line">        </div><div class="line"><span class="comment">//        SaveViewDatas = [</span></div><div class="line"><span class="comment">//            ["img": saveImageView1.image,"text": saveText1.text,],</span></div><div class="line"><span class="comment">//            ["img": saveImageView2.image,"text": saveText2.text,],</span></div><div class="line"><span class="comment">//            ["img": saveImageView3.image,"text": saveText3.text,],</span></div><div class="line"><span class="comment">//            ["img": saveImageView4.image,"text": saveText4.text,],</span></div><div class="line"><span class="comment">//        ]</span></div><div class="line">        </div><div class="line">        saveText1.addGestureRecognizer(<span class="type">TGR</span>(<span class="string">"save1"</span>))</div><div class="line">        saveText2.addGestureRecognizer(<span class="type">TGR</span>(<span class="string">"save2"</span>))</div><div class="line">        saveText3.addGestureRecognizer(<span class="type">TGR</span>(<span class="string">"save3"</span>))</div><div class="line">        saveText4.addGestureRecognizer(<span class="type">TGR</span>(<span class="string">"save4"</span>))</div><div class="line">        </div><div class="line">        unwrapAll()</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">TGR</span><span class="params">(name:String)</span></span> -&gt; <span class="type">UITapGestureRecognizer</span> &#123;</div><div class="line">        <span class="keyword">return</span> <span class="type">UITapGestureRecognizer</span>(target: <span class="keyword">self</span>, action: <span class="type">Selector</span>(name))</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line"><span class="comment">//    func unwrap() &#123;</span></div><div class="line"><span class="comment">//        for i in 0...3 &#123;</span></div><div class="line"><span class="comment">//            </span></div><div class="line"><span class="comment">//            var views = SaveViewDatas[i]</span></div><div class="line"><span class="comment">//            </span></div><div class="line"><span class="comment">//            if let num = saves[i] &#123; // every savePoint</span></div><div class="line"><span class="comment">//                </span></div><div class="line"><span class="comment">//                let source = data[num]</span></div><div class="line"><span class="comment">//                </span></div><div class="line"><span class="comment">//                if let bgStr = source["bg"] &#123;</span></div><div class="line"><span class="comment">//                    </span></div><div class="line"><span class="comment">//                    print(UIImage(named: bgStr))</span></div><div class="line"><span class="comment">//                    print(views["img"]!)</span></div><div class="line"><span class="comment">//                    views["img"]! = UIImage(named: bgStr)</span></div><div class="line"><span class="comment">//                    //saveImage1 = UIImage(named: bgStr)</span></div><div class="line"><span class="comment">//                    print(saveImage1)</span></div><div class="line"><span class="comment">//                    print(views["img"]!)</span></div><div class="line"><span class="comment">//                &#125;</span></div><div class="line"><span class="comment">//                </span></div><div class="line"><span class="comment">//                if let words = source["words"] &#123;</span></div><div class="line"><span class="comment">//                    </span></div><div class="line"><span class="comment">//                    print(words)</span></div><div class="line"><span class="comment">//                    print(views["text"])</span></div><div class="line"><span class="comment">//                    print(views["text"]!)</span></div><div class="line"><span class="comment">//                    print(views["text"]!!)</span></div><div class="line"><span class="comment">//                    views["text"]!! = words</span></div><div class="line"><span class="comment">//                    print(words)</span></div><div class="line"><span class="comment">//                    print(views["text"])</span></div><div class="line"><span class="comment">//                    print(views["text"]!)</span></div><div class="line"><span class="comment">//                    print(views["text"]!!)</span></div><div class="line"><span class="comment">//                &#125;</span></div><div class="line"><span class="comment">//                </span></div><div class="line"><span class="comment">//            &#125; else &#123;</span></div><div class="line"><span class="comment">//                //print("\(index) is nil.\n");</span></div><div class="line"><span class="comment">//            &#125;</span></div><div class="line"><span class="comment">//        &#125;</span></div><div class="line"><span class="comment">//    &#125;</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">unwrapAll</span><span class="params">()</span></span> &#123;</div><div class="line">        unwrap1()</div><div class="line">        unwrap2()</div><div class="line">        unwrap3()</div><div class="line">        unwrap4()</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">unwrap1</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">if</span> <span class="keyword">let</span> n = saves[<span class="number">0</span>] &#123;</div><div class="line">            <span class="keyword">let</span> source1 = data[n]</div><div class="line">            <span class="keyword">if</span> <span class="keyword">let</span> bgStr = source1[<span class="string">"bg"</span>] &#123;</div><div class="line">                saveImageView1.image = <span class="type">UIImage</span>(named: bgStr)</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> <span class="keyword">let</span> words = source1[<span class="string">"words"</span>] &#123;</div><div class="line">                saveText1.text = words</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">unwrap2</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">if</span> <span class="keyword">let</span> n = saves[<span class="number">1</span>] &#123;</div><div class="line">            <span class="keyword">let</span> source2 = data[n]</div><div class="line">            <span class="keyword">if</span> <span class="keyword">let</span> bgStr = source2[<span class="string">"bg"</span>] &#123;</div><div class="line">                saveImageView2.image = <span class="type">UIImage</span>(named: bgStr)</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> <span class="keyword">let</span> words = source2[<span class="string">"words"</span>] &#123;</div><div class="line">                saveText2.text = words</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">unwrap3</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">if</span> <span class="keyword">let</span> n = saves[<span class="number">2</span>] &#123;</div><div class="line">            <span class="keyword">let</span> source3 = data[n]</div><div class="line">            <span class="keyword">if</span> <span class="keyword">let</span> bgStr = source3[<span class="string">"bg"</span>] &#123;</div><div class="line">                saveImageView3.image = <span class="type">UIImage</span>(named: bgStr)</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> <span class="keyword">let</span> words = source3[<span class="string">"words"</span>] &#123;</div><div class="line">                saveText3.text = words</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">unwrap4</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">if</span> <span class="keyword">let</span> n = saves[<span class="number">3</span>] &#123;</div><div class="line">            <span class="keyword">let</span> source4 = data[n]</div><div class="line">            <span class="keyword">if</span> <span class="keyword">let</span> bgStr = source4[<span class="string">"bg"</span>] &#123;</div><div class="line">                saveImageView4.image = <span class="type">UIImage</span>(named: bgStr)</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> <span class="keyword">let</span> words = source4[<span class="string">"words"</span>] &#123;</div><div class="line">                saveText4.text = words</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">save1</span><span class="params">()</span></span>&#123;</div><div class="line">        saves[<span class="number">0</span>] = number</div><div class="line">        unwrap1()</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">save2</span><span class="params">()</span></span>&#123;</div><div class="line">        saves[<span class="number">1</span>] = number</div><div class="line">        unwrap2()</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">save3</span><span class="params">()</span></span>&#123;</div><div class="line">        saves[<span class="number">2</span>] = number</div><div class="line">        unwrap3()</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">save4</span><span class="params">()</span></span>&#123;</div><div class="line">        saves[<span class="number">3</span>] = number</div><div class="line">        unwrap4()</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>（后后注，听说你们要看图？前方高能预警</p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.1.12/1.PNG" alt="title"></p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.1.12/2.PNG" alt="title"></p>
<p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/blog/16.1.12/3.PNG" alt="title"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;（后注，一个GalGame的保存界面&lt;/p&gt;
&lt;p&gt;IB的垃圾引用，fuck me&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于价值观的闲聊</title>
    <link href="http://yoursite.com/2015/12/30/%E5%85%B3%E4%BA%8E%E4%BB%B7%E5%80%BC%E8%A7%82%E7%9A%84%E9%97%B2%E8%81%8A/"/>
    <id>http://yoursite.com/2015/12/30/关于价值观的闲聊/</id>
    <published>2015-12-30T06:03:45.000Z</published>
    <updated>2016-07-22T16:30:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="闲">闲</h2><p>价值观是一个很大很广泛的话题，我们每个人都遵循着自己的价值观来做出自己的判断与决策。</p>
<p>然而每个人的价值观又有所不同，也完全没有『正确』的一种。</p>
<p>脑子一热，就有了这篇东西，以后随时可能删掉。</p>
<p>主观观点，不望细究。</p>
<p>看过我中二样子的人都死了。</p>
<h2 id="终极欲望">终极欲望</h2><p>按照自然规律，人类的终极欲望是sex，人类所作所为，直接或者间接都是为了找到一个好的伴侣。</p>
<p>这是他们的本能所趋，就好像迷宫的终点，黑洞的中心。</p>
<p>嘴拒身实，欲拒还迎。</p>
<p>就算是终极的单身主义者，其本身的定义也是围绕着这个话题展开的。</p>
<p>然后我们聊聊毒品。</p>
<p>有人认为吸毒和吸烟差不多，有人认为吸毒很可怕，谈毒色变。然而终究到底不过纸上谈兵，过把嘴瘾，不知所以然。</p>
<p>按照实现的快感来说，吸毒是自X的大约几百倍。『一般人戒不了自X，能戒得了吸毒？』</p>
<p>这也是狂妄。</p>
<blockquote>
<p>我没吸过毒，但是我了解吸毒的感受。</p>
</blockquote>
<p>活20余载，世上最爽的事情，莫过于约X，其次自X。</p>
<p>在某一天，你试了一次毒。</p>
<p>你的价值观完全被摧毁了。</p>
<p>世界上还有比sex更爽的事？</p>
<blockquote>
<p>你的终极欲望被改变了</p>
</blockquote>
<p>20多年白活了，你原来追求的东西是问了什么？约X的意义是什么？组建家庭的意义呢？</p>
<p>你不顾一切的去追求它，不惜一切代价，之前的努力反正都不是我想要的，有谁要就拿去吧。</p>
<p>你『追求理想』的过程被打断了，他们把你抓了起来。</p>
<p>你不觉得自己做错了，他们非要说你错。追求本能有错吗？</p>
<p>与毒隔绝的日子，煎熬。</p>
<p>精神恍惚，煎熬。</p>
<p>煎熬。</p>
<p>他们让你出来了。</p>
<p>他们很开心，你陪着开心，说你终于戒毒了。</p>
<p>然而你知道他们一件不知道的事情。</p>
<p>你复吸了，因为你活着就是为了追求它，就像他们活着就是为了追求sex一样。</p>
<p>然而他们还是不知道。他们又来了。</p>
<p>你想告诉他们，但是他们比起严肃来说，更多的是害怕。</p>
<p>明明这里是天堂。</p>
<p>那么你觉得，他们的价值观错了吗？</p>
<p>那错误的价值观，到底是什么呢？</p>
<h2 id="与自己的斗争">与自己的斗争</h2><p>人应该服从自己的欲望吗？</p>
<p>这是个伪问题，因为人都屈服了。</p>
<p>克制的意义是什么？是为了更多，还是为了欲望。</p>
<p>这里的欲望，不是终极欲望，是它之前派出的杂修。</p>
<p>过去的我完全屈服于自己的欲望。</p>
<p>但是我并不快乐。</p>
<p>现在我有意的折磨自己，刻意背离欲望。</p>
<p>还是不快乐，我面露愁容。</p>
<p>虽然不快乐，但是我从未尝过真正意义上的痛苦。</p>
<p>所有做错事情的人都不觉得但是是错的，因为是当前情况下做出的最好决策。</p>
<p>这么一想的话，世界上没有什么事情，是不能容忍的了。</p>
<p>放纵是合理的，只要不惹怒他人。</p>
<h2 id="他人的价值观">他人的价值观</h2><p>我的价值观改变过很多次，一般是有意无意的向心目中理想的未来自己靠近，比如让孩子及早进行成人教育。</p>
<p>『我要是我的父亲，我现在绝对不是这个样子。』</p>
<p>然而我的父亲并不傻，他也考虑过这个问题。</p>
<p>每个人即时拿着相同的一套牌，但是也打不出一样的效果。对于有的人来说是天胡，一路顺风顺水，对于有的人来说是灾难，一路被人卡手。</p>
<p>人都不一样，但是都惊人地相似。</p>
<blockquote>
<p>让我猜猜现在的你</p>
</blockquote>
<p>你穿着随便的走在路上，完全不知道上午做了什么。</p>
<p>后脑核仁有些疼，头脑有点恍惚，甚至走着走着小绊了一脚，路人别过头去当做没看见。</p>
<p>你想去某个食堂吃饭，顺便拿一个星期前到的快递，决定了好久就去了人最少的那个地方。虽然饭菜不怎么好吃。</p>
<p>吃饭的时候一个人占4人座，或是和陌生人一起坐已经不再尴尬。为了不单单吃饭，你还尝试想一些简单的问题。</p>
<p>你甚至还想出了答案。</p>
<p>回去的时候脚步明显快了很多，甚至还能有心思刷刷微博。</p>
<p>回到寝室以后，发现没有人，或者那个平时不怎么交际的人还在玩游戏。</p>
<p>快递忘拿了。</p>
<p>好像洗衣桶也忘记带下去了。</p>
<blockquote>
<p>这种人就是我说的失去方向的人。</p>
</blockquote>
<h2 id="抉择">抉择</h2><p>一个人闲的无聊，就会做特别有意思的事情。</p>
<p>以前我喜欢和别人争论，现在别人都懒得和我说话。</p>
<p>『说服』这种东西，只会让人没朋友就是了。</p>
<p>于是我经常自己和自己说话。</p>
<p>有的人会说，那你不和自己说话和谁去说啊。</p>
<p>那我有什么办法。</p>
<p>又有的人会说，那你不会自黑吗？</p>
<p>我是在自黑啊，一直在自黑，就像这段和上面那段一样。</p>
<p>但是自黑的目的呢，我是为了黑自己。</p>
<p>别自黑得让别人接不了话。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;闲&quot;&gt;闲&lt;/h2&gt;&lt;p&gt;价值观是一个很大很广泛的话题，我们每个人都遵循着自己的价值观来做出自己的判断与决策。&lt;/p&gt;
&lt;p&gt;然而每个人的价值观又有所不同，也完全没有『正确』的一种。&lt;/p&gt;
&lt;p&gt;脑子一热，就有了这篇东西，以后随时可能删掉。&lt;/p&gt;
&lt;p&gt;主观观点
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2015总结</title>
    <link href="http://yoursite.com/2015/12/29/2015/"/>
    <id>http://yoursite.com/2015/12/29/2015/</id>
    <published>2015-12-29T02:51:57.000Z</published>
    <updated>2015-12-30T06:02:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="当前的闲聊">当前的闲聊</h2><p>新年好！</p>
<p>我是XANA，一个普通的coder</p>
<p>今天是12月的最后几天，这个月初很激情地一直在写Swift，之后开始沉迷炉石游戏和直播，到现在竟然发现这个月没有什么可以分享的。🐶</p>
<p>拿手头最值得说说的项目，也就是Cpp作业的那个管理系统了。但是要说有什么出彩的地方，除了界面很花哨以外（Cli），逻辑也写得比较严谨，以前写游戏的封装思想也贯彻了我的代码风格：把自己的代码逻辑写完后，把给他人完成的地方封装在 一个头文件 的十几个空函数中，并加以详细的注释和例子，这样他人只需要把自己的接口和我的合并，测试也很容易发现问题而修改。</p>
<p>但这并不是什么可以称赞的地方，倒不如说，不这么做我就不知道怎么和他人去协作。因为我不愿去看别人的逻辑层，我也不愿意别人修改我的代码，更不指望他们会这么做。这个作业的<code>commit</code>非常的频繁，也是我比较用心的一次作业。</p>
<p>（然而我发现我在有意无意的逃离数据库层，可能是我比较反感sql那种结构吧。部署数据库本身就是挺麻烦的事情，相同的代码不能处处运行，好在服务器并不是经常更换的那种设备。）</p>
<p>等到考试结束以后，继续完成手里的app，结构已经完成了，就剩下苦力活了。</p>
<h2 id="最近！">最近！</h2><p>圣诞节收到了两个苹果！一个是班长送的，一个是夜夜送的，Thank you！</p>
<p>基本没有什么人际交往，挺好的！</p>
<p>每天9点起，基本被动翘掉了第一节课。（比我舍友起的早多了好嘛！</p>
<h2 id="新的东西！">新的东西！</h2><p>今年从大二起开始学习iOS，自己多了一项技能了！自己也亲身确定了学校项目的水分，决定这4年自学了！</p>
<p>我只做游戏！</p>
<p>今年最大的收获是找到了适合自己的代码风格！虽然不一定是最佳实践。</p>
<p><a href="https://coding.net/u/xana" target="_blank" rel="external">Coding地址</a> （开源项目不多</p>
<h2 id="上月目标完成结果">上月目标完成结果</h2><ul>
<li>用Python爬几个网站（完成，但目的不明，弃坑</li>
<li>改好自己的JS游戏（换一种姿势继续挖</li>
<li>*学习Sketch和Pixelmator，学习切图（完成</li>
<li>学好没翘的课（我在学啊。</li>
</ul>
<h2 id="至于。。">至于。。</h2><p>发现随着时间推移，人对自己的要求是越来越低了。我天天在群里看着学弟们装逼而插不上话的时候，就时时刻刻提醒自己：</p>
<blockquote>
<p>不要做井底之蛙！</p>
</blockquote>
<p>同理可得，不能满足于现在所处的位置，你眼前的天堂，可能别人看来就是地狱！</p>
<p>极客不追求技术，和咸鱼有什么区别！</p>
<h2 id="极客部落！">极客部落！</h2><p>极客部落是变好了，暂时，没有想我预言的一样在期末解散掉，挺好的。虽然熊已经做好了这样的打算。（或者说他已经无所谓了，目的已经达到了</p>
<p>我还是坚持之前的做法，不再干涉社团的有关事务，有意思的活动越来越少了。大家都只会玩LXL，XX大战这种简单无脑的游戏，稍微复杂动脑一点的游戏就敬而远之。说实话，我的自尊是不会让我玩这种简单的游戏的。不过狼人杀可以叫上我，我肯定会到的！</p>
<p>不过怎么没有看到有创业意愿的社员啊，勿忘熊桑的初心啊！</p>
<p><strong><em>2016来啦</em></strong></p>
<p>最后祝您身体健康</p>
<p>Have a nice day! ☕️</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;当前的闲聊&quot;&gt;当前的闲聊&lt;/h2&gt;&lt;p&gt;新年好！&lt;/p&gt;
&lt;p&gt;我是XANA，一个普通的coder&lt;/p&gt;
&lt;p&gt;今天是12月的最后几天，这个月初很激情地一直在写Swift，之后开始沉迷炉石游戏和直播，到现在竟然发现这个月没有什么可以分享的。🐶&lt;/p&gt;
&lt;p&gt;拿
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>分享一个自己写的脚本</title>
    <link href="http://yoursite.com/2015/12/03/%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84%E8%84%9A%E6%9C%AC/"/>
    <id>http://yoursite.com/2015/12/03/分享一个自己写的脚本/</id>
    <published>2015-12-03T11:22:42.000Z</published>
    <updated>2015-12-08T13:05:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tree">tree</h2><blockquote>
<p>模仿<code>tree</code>指令写的脚本 file.py</p>
</blockquote>
<p>效果如下：显示当前目录的文件树</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">~/workspace/shell/tree » ./file.py                                                                  xana@localhost</div><div class="line">.</div><div class="line">├── arr.js</div><div class="line">├── arr.py</div><div class="line">├── file.py</div><div class="line">├── test</div><div class="line">│   ├── 1中文.txt</div><div class="line">│   ├── 2.txt</div><div class="line">│   └── test</div><div class="line">│       └── 1.txt</div><div class="line">└── z.txt</div><div class="line"></div><div class="line">2 directories, 7 files</div></pre></td></tr></table></figure>
<p>（实际上路径显示为蓝色，文件显示为绿色）</p>
<h2 id="思路">思路</h2><p>最开始的时候是在数据结构课做完了作业没事干，开始沿着二叉树的递归思想，准备写一个文件树脚本，并准备用当前的shell知识给不同类型的文件染上不同的颜色。</p>
<p>我首先想到的就是用JS就能较为容易的实现。（大雾</p>
<p>1、首先用一个复杂的数组（相当于Lisp的广义表）来进行递归测试</p>
<p>2、递归过程中，用一个数字来代替文件名字之前的特殊图形符号组。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// 用一个4进制数表示图像</div><div class="line">// 0: (    )</div><div class="line">// 1  (│   ) 当前数组i!=a.length-1，而level++下层时</div><div class="line">// 2: (├── ) 当前数组i!=a.length-1，本层时</div><div class="line">// 3: (└── ) 当前数组i==a.length-1</div></pre></td></tr></table></figure>
<p>3、因为符号有四种，用一个4进制数字理论上就能代表所有的图形。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">/*从右往左</div><div class="line"> .</div><div class="line"> ├── 4.txt              //002</div><div class="line"> ├── index.js           //002</div><div class="line"> ├── package.json       //002</div><div class="line"> ├── qwe                //002</div><div class="line"> ├── test               //002</div><div class="line"> │   ├── 1.txt          //021</div><div class="line"> │   ├── 2.txt          //021</div><div class="line"> │   └── test           //031</div><div class="line"> │       └── 1.txt      //301</div><div class="line"> └── tree.js            //003</div><div class="line">                        //000</div><div class="line">*/</div></pre></td></tr></table></figure>
<p>4、递归函数应当包含以下特征：1）根据是否为数组而决定是否递归  2）根据是否为数组的最后一项而决定是两种图形组数的处理方式的哪一种。</p>
<p>5、想法测试</p>
<p><strong>arr.js</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env node</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> tree = [</div><div class="line">    <span class="string">"1001"</span>,</div><div class="line">    <span class="string">"1002"</span>,</div><div class="line">    <span class="string">"1003"</span>,</div><div class="line">    [],</div><div class="line">    [</div><div class="line">        <span class="string">"fuck"</span>,</div><div class="line">        [</div><div class="line">            <span class="string">"shit"</span>,</div><div class="line">            <span class="string">"bitch"</span></div><div class="line">        ],</div><div class="line">        <span class="comment">//"fuck"</span></div><div class="line">    ],</div><div class="line">    <span class="string">"1004"</span>,</div><div class="line">    <span class="string">"1005"</span>,</div><div class="line">    <span class="string">"1006"</span>,</div><div class="line">    <span class="string">"status"</span>,</div><div class="line">    [</div><div class="line">        <span class="string">"AC"</span>,</div><div class="line">        <span class="string">"TL"</span>,</div><div class="line">        <span class="string">"WA"</span>,</div><div class="line">        <span class="string">"CE"</span>,</div><div class="line">        [</div><div class="line">            <span class="string">"a"</span>,</div><div class="line">            <span class="string">"b"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"~"</span>,</div><div class="line">        <span class="string">"OUT!"</span></div><div class="line">    ],</div><div class="line">    [</div><div class="line">        [</div><div class="line">            <span class="string">"a"</span>,</div><div class="line">            <span class="string">"c"</span></div><div class="line">        ],</div><div class="line">        <span class="string">"b"</span></div><div class="line">    ],</div><div class="line">    [</div><div class="line">        [</div><div class="line">            [<span class="string">"a"</span>]</div><div class="line">        ]</div><div class="line">    ],</div><div class="line">   <span class="comment">//"status",</span></div><div class="line">];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">flo</span>(<span class="params">level</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> str = <span class="string">""</span>;</div><div class="line">    <span class="keyword">while</span> (level) &#123;</div><div class="line">        <span class="keyword">var</span> lev = level%<span class="number">4</span>;</div><div class="line">        <span class="keyword">switch</span>(lev) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="number">0</span>:str+=<span class="string">"    "</span> ;<span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">1</span>:str+=<span class="string">"│   "</span> ;<span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">2</span>:str+=<span class="string">"├── "</span> ;<span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">3</span>:str+=<span class="string">"└── "</span> ;<span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        level = (level-lev)/<span class="number">4</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> str;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span>(<span class="params">level</span>)</span>&#123;    <span class="comment">// 查看level最高位 3-&gt;1 33-&gt;2</span></div><div class="line">    <span class="keyword">var</span> count=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(level)&#123;</div><div class="line">        level=<span class="built_in">Math</span>.floor(level/<span class="number">4</span>);</div><div class="line">        count++;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> count</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params">floor,element</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span>(element) == <span class="string">"object"</span>) &#123;</div><div class="line">      element=<span class="string">"object: ["</span>+element+<span class="string">"] "</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">console</span>.log(floor+element);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ele2</span>(<span class="params">i,level</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> end = i.length<span class="number">-1</span>;</div><div class="line">    <span class="keyword">var</span> t = <span class="built_in">Math</span>.pow(<span class="number">4</span>,max(level)<span class="number">-1</span>);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> x <span class="keyword">in</span> i) &#123;</div><div class="line">        <span class="keyword">if</span> (x&lt;end) &#123;                       <span class="comment">// not end</span></div><div class="line">            draw(flo(level),i[x]);</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> i[x] == <span class="string">"object"</span>) &#123;     <span class="comment">// 2x -&gt; 20x</span></div><div class="line">                ele2(i[x],level+t*<span class="number">4</span>+<span class="number">3</span>*t); <span class="comment">//todo: add  | mid</span></div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;                                    <span class="comment">// end</span></div><div class="line">            draw(flo(level+t),i[x]);</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> i[x] == <span class="string">"object"</span>) &#123;     <span class="comment">// the place is tested out, not cal</span></div><div class="line">                ele2(i[x],level+t*<span class="number">4</span>+<span class="number">2</span>*t); <span class="comment">//todo add | end</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(<span class="string">'.'</span>);</div><div class="line"><span class="keyword">var</span> lev = <span class="number">2</span>;</div><div class="line">ele2(tree, lev);</div></pre></td></tr></table></figure>
<p>测试结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">~/workspace/shell/tree » ./arr.js                                                                   xana@localhost</div><div class="line">.</div><div class="line">├── 1001</div><div class="line">├── 1002</div><div class="line">├── 1003</div><div class="line">├── object: [] </div><div class="line">├── object: [fuck,shit,bitch] </div><div class="line">│   ├── fuck</div><div class="line">│   └── object: [shit,bitch] </div><div class="line">│       ├── shit</div><div class="line">│       └── bitch</div><div class="line">├── 1004</div><div class="line">├── 1005</div><div class="line">├── 1006</div><div class="line">├── status</div><div class="line">├── object: [AC,TL,WA,CE,a,b,~,OUT!] </div><div class="line">│   ├── AC</div><div class="line">│   ├── TL</div><div class="line">│   ├── WA</div><div class="line">│   ├── CE</div><div class="line">│   ├── object: [a,b] </div><div class="line">│   │   ├── a</div><div class="line">│   │   └── b</div><div class="line">│   ├── ~</div><div class="line">│   └── OUT!</div><div class="line">├── object: [a,c,b] </div><div class="line">│   ├── object: [a,c] </div><div class="line">│   │   ├── a</div><div class="line">│   │   └── c</div><div class="line">│   └── b</div><div class="line">└── object: [a] </div><div class="line">    └── object: [a] </div><div class="line">        └── object: [a] </div><div class="line">            └── a</div></pre></td></tr></table></figure>
<p>6、用node改写处理文件树，将是否为数组判断改为文件 isDirectory() 修改时间期望15min</p>
<p>7、<a href="http://mephistopheies.me/2015/09/09/node-xie-terminal-tool-ke-zhen-bu-rong-yi/" target="_blank" rel="external">控制不了异步返回结果</a>，开始重写为回调。</p>
<p>8、（十年后）卒。</p>
<p>9、吃饭的时候想到用非异步就好了。</p>
<p>10、重用Python，重复步骤1-5.</p>
<p>11、测试想法</p>
<p>arr.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python3</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> os, sys, math</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">tree = [ <span class="string">'1001'</span>,<span class="string">'1002'</span>,<span class="string">'1003'</span>,[],  [ <span class="string">'fuck'</span>, [ <span class="string">'shit'</span>, <span class="string">'bitch'</span> ] ],  <span class="string">'1004'</span>,  <span class="string">'1005'</span>,  <span class="string">'1006'</span>,  <span class="string">'status'</span>,  [ <span class="string">'AC'</span>, <span class="string">'TL'</span>, <span class="string">'WA'</span>, <span class="string">'CE'</span>, [ <span class="string">'a'</span>, <span class="string">'b'</span> ], <span class="string">'~'</span>, <span class="string">'OUT!'</span> ],  [ [ <span class="string">'a'</span>, <span class="string">'c'</span> ], <span class="string">'b'</span> ],  [ [ [ ] ] ] ]</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#4进制 最高位 3-&gt;1 5-&gt;2</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">maxf</span><span class="params">(level)</span>:</span></div><div class="line"></div><div class="line">    count=<span class="number">0</span></div><div class="line"></div><div class="line">    <span class="keyword">while</span> level:</div><div class="line"></div><div class="line">        level = math.floor(level/<span class="number">4</span>)</div><div class="line"></div><div class="line">        count += <span class="number">1</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> count</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 用一个4进制数表示图像</span></div><div class="line"><span class="comment"># 0: (    )</span></div><div class="line"><span class="comment"># 1  (│   ) 当前数组i!=a.length-1，而level++下层时</span></div><div class="line"><span class="comment"># 2: (├── ) 当前数组i!=a.length-1，本层时</span></div><div class="line"><span class="comment"># 3: (└── ) 当前数组i==a.length-1</span></div><div class="line">img = [<span class="string">"    "</span>, <span class="string">"│   "</span>, <span class="string">"├── "</span>, <span class="string">"└── "</span>]</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># shape of floor</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">flo</span><span class="params">(level)</span>:</span></div><div class="line"></div><div class="line">    pic = <span class="string">""</span></div><div class="line"></div><div class="line">    <span class="keyword">while</span> level:</div><div class="line"></div><div class="line">        lev = level%<span class="number">4</span></div><div class="line"></div><div class="line">        pic += img[lev]</div><div class="line"></div><div class="line">        level = math.floor(level/<span class="number">4</span>)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> pic</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># draw the floor</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(floor, element)</span>:</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> isinstance(element,list):</div><div class="line"></div><div class="line">        element = <span class="string">"list: "</span> + str(element)</div><div class="line"></div><div class="line">    print(floor + element)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 递归函数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ele</span><span class="params">(i, level)</span>:</span></div><div class="line"></div><div class="line">    t = pow(<span class="number">4</span>, maxf(level)<span class="number">-1</span>)</div><div class="line"></div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(len(i)):</div><div class="line"></div><div class="line">        <span class="keyword">if</span> x &lt; len(i)<span class="number">-1</span>:</div><div class="line"></div><div class="line">            draw(flo(level), i[x])</div><div class="line"></div><div class="line">            <span class="keyword">if</span> isinstance(i[x],list):</div><div class="line"></div><div class="line">                ele(i[x], level+t*<span class="number">4</span>+<span class="number">3</span>*t)</div><div class="line"></div><div class="line">        <span class="keyword">else</span>:</div><div class="line"></div><div class="line">            draw(flo(level+t), i[x])</div><div class="line"></div><div class="line">            <span class="keyword">if</span> isinstance(i[x],list):</div><div class="line"></div><div class="line">                ele(i[x], level+t*<span class="number">4</span>+<span class="number">2</span>*t)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">print(<span class="string">'.'</span>)</div><div class="line"></div><div class="line">ele(tree,<span class="number">2</span>)</div></pre></td></tr></table></figure>
<p>测试结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">~/workspace/shell/tree » ./arr.py                                                                   xana@localhost</div><div class="line">.</div><div class="line">├── 1001</div><div class="line">├── 1002</div><div class="line">├── 1003</div><div class="line">├── list: []</div><div class="line">├── list: [&apos;fuck&apos;, [&apos;shit&apos;, &apos;bitch&apos;]]</div><div class="line">│   ├── fuck</div><div class="line">│   └── list: [&apos;shit&apos;, &apos;bitch&apos;]</div><div class="line">│       ├── shit</div><div class="line">│       └── bitch</div><div class="line">├── 1004</div><div class="line">├── 1005</div><div class="line">├── 1006</div><div class="line">├── status</div><div class="line">├── list: [&apos;AC&apos;, &apos;TL&apos;, &apos;WA&apos;, &apos;CE&apos;, [&apos;a&apos;, &apos;b&apos;], &apos;~&apos;, &apos;OUT!&apos;]</div><div class="line">│   ├── AC</div><div class="line">│   ├── TL</div><div class="line">│   ├── WA</div><div class="line">│   ├── CE</div><div class="line">│   ├── list: [&apos;a&apos;, &apos;b&apos;]</div><div class="line">│   │   ├── a</div><div class="line">│   │   └── b</div><div class="line">│   ├── ~</div><div class="line">│   └── OUT!</div><div class="line">├── list: [[&apos;a&apos;, &apos;c&apos;], &apos;b&apos;]</div><div class="line">│   ├── list: [&apos;a&apos;, &apos;c&apos;]</div><div class="line">│   │   ├── a</div><div class="line">│   │   └── c</div><div class="line">│   └── b</div><div class="line">└── list: [[[]]]</div><div class="line">    └── list: [[]]</div><div class="line">        └── list: []</div></pre></td></tr></table></figure>
<p>12、改写处理文件树，将是否为数组判断改为文件 os.path.isdir([path])， 修改时间期望15min</p>
<p>13、done.</p>
<p>file.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python3</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> os, sys, math</div><div class="line"></div><div class="line">path = os.getcwd()</div><div class="line"></div><div class="line">root = os.listdir(path)</div><div class="line"></div><div class="line">img = [ <span class="string">'    '</span>, <span class="string">'│   '</span>, <span class="string">'├── '</span>, <span class="string">'└── '</span> ]</div><div class="line"></div><div class="line">Color = &#123;<span class="string">'default'</span>: <span class="string">'\033[0m'</span>, <span class="string">'red'</span>: <span class="string">'\033[31m'</span>, <span class="string">'green'</span>: <span class="string">'\033[32m'</span>, <span class="string">'grey'</span>: <span class="string">'\033[36m'</span>&#125;</div><div class="line"></div><div class="line">counts = &#123;<span class="string">'directories'</span>: <span class="number">0</span>, <span class="string">'files'</span>: <span class="number">0</span>&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#4进制 最高位 3-&gt;1 5-&gt;2</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">maxf</span><span class="params">(level)</span>:</span></div><div class="line"></div><div class="line">    count=<span class="number">0</span></div><div class="line"></div><div class="line">    <span class="keyword">while</span> level:</div><div class="line"></div><div class="line">        level = math.floor(level/<span class="number">4</span>)</div><div class="line"></div><div class="line">        count += <span class="number">1</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> count</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># shape the floor</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">flo</span><span class="params">(level)</span>:</span></div><div class="line"></div><div class="line">    pic = <span class="string">''</span></div><div class="line"></div><div class="line">    <span class="keyword">while</span> level:</div><div class="line"></div><div class="line">        lev = level % <span class="number">4</span></div><div class="line"></div><div class="line">        pic += img[lev]</div><div class="line"></div><div class="line">        level = math.floor(level/<span class="number">4</span>)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> pic</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># draw the floor</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(floor, element, isDir)</span>:</span></div><div class="line"></div><div class="line">    color = <span class="string">'default'</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> isDir:</div><div class="line"></div><div class="line">        color = <span class="string">'grey'</span></div><div class="line"></div><div class="line">        counts[<span class="string">'directories'</span>] += <span class="number">1</span></div><div class="line"></div><div class="line">    <span class="keyword">else</span>:</div><div class="line"></div><div class="line">        counts[<span class="string">'files'</span>] += <span class="number">1</span></div><div class="line"></div><div class="line">    print(floor + Color[color] + str(element) + Color[<span class="string">'default'</span>])</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 递归函数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ele</span><span class="params">(i, level, dire)</span>:</span></div><div class="line"></div><div class="line">    i = list(filter(<span class="keyword">lambda</span> x:x[<span class="number">0</span>] != <span class="string">'.'</span>, i))</div><div class="line"></div><div class="line">    t = pow(<span class="number">4</span>, maxf(level) - <span class="number">1</span>)</div><div class="line"></div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(len(i)):</div><div class="line"></div><div class="line">        <span class="keyword">if</span> x &lt; len(i) - <span class="number">1</span>:</div><div class="line"></div><div class="line">            Dire = os.path.join(dire, i[x])</div><div class="line"></div><div class="line">            draw(flo(level), i[x], os.path.isdir(Dire))</div><div class="line"></div><div class="line">            <span class="keyword">if</span> os.path.isdir(Dire):</div><div class="line"></div><div class="line">                dirlist = os.listdir(Dire)</div><div class="line"></div><div class="line">                ele(dirlist, level+t*<span class="number">4</span>+<span class="number">3</span>*t, Dire)</div><div class="line"></div><div class="line"></div><div class="line">        <span class="keyword">else</span>:</div><div class="line"></div><div class="line">            Dire = os.path.join(dire, i[x])</div><div class="line"></div><div class="line">            draw(flo(level+t), i[x], os.path.isdir(Dire))</div><div class="line"></div><div class="line">            <span class="keyword">if</span> os.path.isdir(Dire):</div><div class="line"></div><div class="line">                dirlist = os.listdir(Dire)</div><div class="line"></div><div class="line">                ele(dirlist, level+t*<span class="number">4</span>+<span class="number">2</span>*t, Dire)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">print(<span class="string">'.'</span>)</div><div class="line"></div><div class="line">ele(root, <span class="number">2</span>, <span class="string">'.'</span>)</div><div class="line"></div><div class="line">print()</div><div class="line"></div><div class="line">print(counts[<span class="string">'directories'</span>],<span class="string">'directories,'</span>,counts[<span class="string">'files'</span>],<span class="string">'files'</span>)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;tree&quot;&gt;tree&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;模仿&lt;code&gt;tree&lt;/code&gt;指令写的脚本 file.py&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果如下：显示当前目录的文件树&lt;/p&gt;
&lt;figure class=&quot;highlight p
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Swift Diary</title>
    <link href="http://yoursite.com/2015/11/10/Swift-Diary/"/>
    <id>http://yoursite.com/2015/11/10/Swift-Diary/</id>
    <published>2015-11-10T06:45:54.000Z</published>
    <updated>2015-11-10T07:16:32.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>天气渐冷，我内心反而愈加炙热。<br>最近更是翘掉了很多不想上的课，虽然老师有善意地发过警告，但是我思考了相当长的一段时间，也纠结过，矛盾过，但是最终还是决定挂掉几门课。不管后不后悔，反正我就这样做下去了。</p>
</blockquote>
<h2 id="Swift">Swift</h2><p>作为一个纯JS的新手，初始Swift时倍感亲切，然而这是一门正在发生剧烈革命的语言。截止到此时Swift已经更新到了2.0版本，其语法发生了很大的改动。网上的许多教程刚出来就过时了。</p>
<p>对于变量来说，Swift采用了<del>伪</del>动态类型<br>比如定义一个变量1<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">1</span></div><div class="line">b = <span class="number">1</span> + <span class="number">0.2</span>		<span class="comment">//1.2</span></div></pre></td></tr></table></figure></p>
<p>为什么说它是<del>伪</del>动态类型呢，因为它的动态类型一点都不好用，调用函数时还是要进行显式转换，它的隐性转换还有很大的发展空间，大概过几个版本希望它与JS一样好用。</p>
<h2 id="Optional">Optional</h2><p>Swift 有个类型叫做Optional，相当于赋予一个初始值nil，实质是一个元组(value, nil)，在进行解绑(unwrapped)时如果没有值就返回nil</p>
<p>我最初被这些 <em>叹号!</em>  <em>问号?</em> 弄得头晕脑胀，方法随着版本的更替更是让这两兄弟跳来跳去；习惯了JS默认值写法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = value || defalutValue</div></pre></td></tr></table></figure></p>
<p>的我，对于Optional的默认值写法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var a = valueOptional ?? defaultValue</div></pre></td></tr></table></figure></p>
<p>感到非常的不适，首先valueOptional是一个Optional类型，进行unwrapped时如果没有value值，就赋予默认值，用于代替nil。</p>
<p><del>所以说这个Optional到底是干吗的嘛</del></p>
<p>方法也可以是Optional类型，这样创建一个类的时候就没用必要实现所有的方法了。<br><del>就这样？</del></p>
<h2 id="Storyborad_or_Code?">Storyborad or Code?</h2><p>在写iOS时，遇到了这个问题，显然在这里就遇到了一个分水岭。我最初选择的是Storyboard，现在还是在用它。Storyboard的一个好处是减少了大量的代码量，所见即所得，缺点也很明显，所得仅所见，Storyboard用拖拽控件的方式添加对应的代码，然而对控件修改时还必须去找控件所在的代码位置进行对应的修改，否则经常出现空指针、野指针。<br>Code大法好，就是费时间。在理解Code的基础上使用Storyboard应该是最快的开发方案了。</p>
<h2 id="End">End</h2><p>争取寒假前完成以下几件事（flag</p>
<ul>
<li>用Python爬几个网站</li>
<li>改好自己的JS游戏</li>
<li>*学习Sketch和Pixelmator，学习切图</li>
<li>学好没翘的课</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;天气渐冷，我内心反而愈加炙热。&lt;br&gt;最近更是翘掉了很多不想上的课，虽然老师有善意地发过警告，但是我思考了相当长的一段时间，也纠结过，矛盾过，但是最终还是决定挂掉几门课。不管后不后悔，反正我就这样做下去了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h
    
    </summary>
    
    
      <category term="Swift" scheme="http://yoursite.com/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>cli</title>
    <link href="http://yoursite.com/2015/11/02/cli/"/>
    <id>http://yoursite.com/2015/11/02/cli/</id>
    <published>2015-11-02T07:58:31.000Z</published>
    <updated>2015-11-24T10:58:55.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>写属于你的命令行(CLI)工具</p>
</blockquote>
<h1 id="可执行文件">可执行文件</h1><p>我们在平时使用Linux和类Linux的终端时，一般对一些系统指令的使用觉得十分自然，比如查看当前目录下的文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/usr » ls                                                                          xana@localhost</div><div class="line">X11        X11R6      adic       bin        lib        libexec    local      sbin       share      standalone</div></pre></td></tr></table></figure></p>
<p>一些非系统指令更是能让我们的操作如鱼得水。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">~/Documents/lua » tree                                                                          xana@localhost</div><div class="line">.</div><div class="line">├── a.lua</div><div class="line">├── b.lua</div><div class="line">├── f.lua</div><div class="line">├── for.lua</div><div class="line">├── hw.lua</div><div class="line">├── local.lua</div><div class="line">├── recursion.lua</div><div class="line">├── snake</div><div class="line">└── table.lua</div><div class="line"></div><div class="line">1 directory, 8 files</div></pre></td></tr></table></figure>
<p>我们知道可以通过编译执行脚本文件<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~/Documents/lua » lua hw.lua                                                                          xana@localhost</div><div class="line">hello world!</div></pre></td></tr></table></figure></p>
<p>也可以通过改变文件权限把文件直接变成可执行文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">~/Documents/lua » chmod a+x hw.lua                                                                  xana@localhost</div><div class="line">------------------------------------------------------------</div><div class="line">~/Documents/lua » l                                                                                 xana@localhost</div><div class="line">total 80</div><div class="line">drwxr-xr-x  12 xana  staff   408B 11  2 16:09 .</div><div class="line">drwx------+ 42 xana  staff   1.4K 11  2 11:01 ..</div><div class="line">-rw-r--r--@  1 xana  staff   6.0K  9 11 10:33 .DS_Store</div><div class="line">-rw-r--r--   1 xana  staff    31B  9 10 23:34 a.lua</div><div class="line">-rw-r--r--   1 xana  staff    34B  9 10 23:37 b.lua</div><div class="line">-rw-r--r--   1 xana  staff    58B  9 11 00:01 f.lua</div><div class="line">-rw-r--r--   1 xana  staff    91B  9 11 00:28 for.lua</div><div class="line">-rwxr-xr-x   1 xana  staff    41B 11  2 16:09 hw.lua</div><div class="line">-rw-r--r--   1 xana  staff    86B  9 11 00:03 local.lua</div><div class="line">-rw-r--r--   1 xana  staff   152B  9 11 00:43 recursion.lua</div><div class="line">drwxr-xr-x   2 xana  staff    68B  9 11 10:32 snake</div><div class="line">-rw-r--r--   1 xana  staff    45B  9 11 01:03 table.lua</div><div class="line">------------------------------------------------------------</div><div class="line">~/Documents/lua » ./hw.lua                                                                          xana@localhost</div><div class="line">hello world!</div></pre></td></tr></table></figure></p>
<p>-rwxr-xr-x 就表示现在此文件可以执行了。</p>
<p>当然文件中需要加上一行用于脚本解释器<br>hw.lua<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env lua</div><div class="line"><span class="built_in">print</span>(<span class="string">"hello world!"</span>)</div></pre></td></tr></table></figure></p>
<p>但是我们现在只能通过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./hw.lua</div></pre></td></tr></table></figure></p>
<p>这种 路径/文件 方式执行文件，要是我想通过文件名直接执行文件怎么办？</p>
<p>我们尝试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">~/Documents/lua » where ls                                                                          xana@localhost</div><div class="line">ls: aliased to ls -G</div><div class="line">/bin/ls</div><div class="line">------------------------------------------------------------</div><div class="line">~/Documents/lua » where cd                                                                          xana@localhost</div><div class="line">cd: shell built-in command</div><div class="line">/usr/bin/cd</div><div class="line">------------------------------------------------------------</div><div class="line">~/Documents/lua » where mkdir                                                                       xana@localhost</div><div class="line">/bin/mkdir</div></pre></td></tr></table></figure></p>
<p>发现一些系统级命令存在于 /bin 和 /usr/bin 目录下，进入文件夹后发现其内容无法进行更改，这些命令数量有限，受到系统的保护。<br>然后我们尝试一些非系统级命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">~/Documents/lua » where node                                                                        xana@localhost</div><div class="line">/usr/local/bin/node</div><div class="line">------------------------------------------------------------</div><div class="line">~/Documents/lua » where tree                                                                        xana@localhost</div><div class="line">/usr/local/bin/tree</div></pre></td></tr></table></figure></p>
<p>我们把脚本文件移动至 /usr/local/bin 文件夹中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~/Documents/lua » mv hw.lua /usr/local/bin</div></pre></td></tr></table></figure></p>
<p>发现可以执行了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~/Documents/lua » hw.lua                                                                            xana@localhost</div><div class="line">hello world!</div></pre></td></tr></table></figure></p>
<p>其实文件并不需要文件名，可去掉后缀名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~/Documents/lua » hw                                                                                xana@localhost</div><div class="line">hello world!</div></pre></td></tr></table></figure></p>
<p>我们总结一下全过程<br>1、新建一个脚本文件，文件名为你想要执行的脚本名称<br>2、脚本首行添加一行 脚本解释器目录<br>3、次行开始写脚本语言<br>4、修改文件权限，变成可执行文件<br>5、将文件移动至 /usr/local/bin</p>
<p>实际上我们查看系统环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~/Documents/lua » env $PATH                                                                         xana@localhost</div><div class="line">env: /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/Server.app/Contents/ServerRoot/usr/bin:/Applications/Server.app/Contents/ServerRoot/usr/sbin:/Users/xana/Documents/quick-3.5/templates:/Users/xana/Documents/quick-3.5:/Users/xana/Documents/quick-3.5/tools/cocos2d-console/bin: No such file or directory</div></pre></td></tr></table></figure></p>
<p>发现它是按照这个顺序查找路径的。所以覆盖等问题转换为路径优先问题。</p>
<p>——————————11.10更新——————————-</p>
<p>从上次听了东豪的讲座之后，发现其实过程5是有更好的替代方案的，就是把脚本路径添加到系统环境中去，比如当前的路径是url，则执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export PATH=$PATH: /url/</div></pre></td></tr></table></figure></p>
<p>这样就可以直接在/url/中执行了脚本文件了(临时<br>想要永久加入系统环境的话，把这句话加到 /etc/profile 中。记得使用管理员权限</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;写属于你的命令行(CLI)工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;可执行文件&quot;&gt;可执行文件&lt;/h1&gt;&lt;p&gt;我们在平时使用Linux和类Linux的终端时，一般对一些系统指令的使用觉得十分自然，比如查看当前目录下的文件：&lt;br&gt;&lt;f
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>dyc.py</title>
    <link href="http://yoursite.com/2015/10/26/dyc-py/"/>
    <id>http://yoursite.com/2015/10/26/dyc-py/</id>
    <published>2015-10-26T06:25:53.000Z</published>
    <updated>2015-10-26T06:53:42.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="delete_your_comments">delete your comments</h4><p>写了一个删除注释的python脚本，能够通过正则匹配：<br>文档注释：<code>/** */</code><br>区块注释：<code>/* */</code><br>单行注释：<code>//</code><br><strong>注：无法识别字符串内的注释</strong><br><br>dyc_raw.py<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">__author__ = &apos;xana&apos;</div><div class="line">import re, sys</div><div class="line">def rename(old, str=&apos;dyc&apos;):</div><div class="line">    new = old.split(&apos;.&apos;)</div><div class="line">    return new[0]+&apos;_&apos;+str+&apos;.&apos;+new[1]</div><div class="line">def success(str):</div><div class="line">    str = re.sub(r&apos;//[\s\S]*?\n&apos;, &apos;\n&apos;, str) # //(.*)</div><div class="line">    str = re.sub(r&apos;/\*&#123;1,2&#125;[\s\S]*?\*/&apos;, &apos;&apos;, str)</div><div class="line">    return str</div><div class="line">def failed():</div><div class="line">    pass</div><div class="line">with open(sys.argv[1], &apos;r&apos;) as fi:</div><div class="line">    with open(rename(sys.argv[1]), &apos;w&apos;) as fo:</div><div class="line">        fo.write(success(fi.read()))</div></pre></td></tr></table></figure></p>
<p>在命令行移动到目标文件路径下后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── a</div><div class="line">│   └── a.js</div><div class="line">├── dyc.py</div><div class="line">├── fuck.txt</div><div class="line">└── test.js</div></pre></td></tr></table></figure></p>
<p>执行<code>python dyc.py fuck.txt</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── a</div><div class="line">│   └── a.js</div><div class="line">├── dyc.py</div><div class="line">├── fuck.txt</div><div class="line">├── fuck_dyc.txt</div><div class="line">└── test.js</div></pre></td></tr></table></figure></p>
<p>即可生成所需的dyc文件</p>
<p>附带烧脑的测试代码·真：<br>test.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * this is a document comment</div><div class="line"> * Created by xana on 15/10/26.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="comment">// this is a line comment</span></div><div class="line">    <span class="comment">/*</span></div><div class="line">        // this is an area comment</div><div class="line">    */</div><div class="line">    <span class="keyword">var</span> str = <span class="string">'please//don\'t/*delete'</span>, str2 = <span class="string">'me"in*/your//test'</span>; <span class="comment">// ouch!"</span></div><div class="line">    <span class="keyword">return</span> e;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>test_out.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> str = <span class="string">'please//don\'t/*delete'</span>, str2 = <span class="string">'me"in*/your//test'</span>;</div><div class="line">    <span class="keyword">return</span> e;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;delete_your_comments&quot;&gt;delete your comments&lt;/h4&gt;&lt;p&gt;写了一个删除注释的python脚本，能够通过正则匹配：&lt;br&gt;文档注释：&lt;code&gt;/** */&lt;/code&gt;&lt;br&gt;区块注释：&lt;code&gt;/* */&lt;/code&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>(一)实现多段跳(airJump)</title>
    <link href="http://yoursite.com/2015/08/31/%E4%B8%80-%E5%AE%9E%E7%8E%B0N%E6%AE%B5%E8%B7%B3/"/>
    <id>http://yoursite.com/2015/08/31/一-实现N段跳/</id>
    <published>2015-08-31T02:12:11.000Z</published>
    <updated>2015-08-31T04:15:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><del>刚刚回到学校，整个人都不好了</del></p>
<h1 id="Forward">Forward</h1><p><img src="https://coding.net/u/xana/p/yinyong/git/raw/master/img/nduantiao.png" alt=""><br>一个横版过关游戏，相比于单纯的固定跳跃来说，多段跳能更好的让玩家自由、细致的操作。实现N段跳的过程并不太难，然而在思考的过程中，还是遇到了一些问题。下面是我对这个方法实现的<code>思考过程</code>。</p>
<h1 id="变量说明">变量说明</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">touching.down			<span class="comment">// 与下方物体接触 (boolean)</span></div><div class="line">cursor.up			<span class="comment">// 方向键的上箭头 (Object)</span></div><div class="line">player.body.velocity.y		<span class="comment">// 玩家的y轴速度 (Number)</span></div></pre></td></tr></table></figure>
<h1 id="实现基本跳跃">实现基本跳跃</h1><p>玩家的默认操作，与左右行走相同，都是放在update函数(即时更新函数)里的<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ( cursors.up.isDown &amp;&amp; player.body.touching.down ) </div><div class="line">&#123;</div><div class="line">  player.body.velocity.y = <span class="number">-500</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="特别说明">特别说明</h1><p>和东方类游戏的”shift”集中状态一样，所有的操作都是布尔状态量！<br>例如向左行走，就是打开了velocity.x=-100的开关，而不是触发一次position.x-=100，哪怕位移间隔再小也不行。一个原因是行为的流畅度，第二个原因是计算的需要。<br>跳跃也是如此，cursors.up.isDown是按下上箭头这个状态，对于我们后续的计算不利，所以我们用原生的事件方法，把跳跃变成事件，这样对于一次按键只会触发一次事件，直到松开按键。</p>
<h1 id="实现二段跳">实现二段跳</h1><h2 id="定义变量">定义变量</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> airJump = <span class="number">2</span>;		<span class="comment">//剩余跳跃次数，与地面接触即恢复为2</span></div></pre></td></tr></table></figure>
<p>并删去update()中原有的跳跃相关代码</p>
<h2 id="phaser的监听方法">phaser的监听方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// now the key is listened (created())</span></div><div class="line">cursors.up.onDown.add(jump);</div></pre></td></tr></table></figure>
<h2 id="jump函数">jump函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">jump</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="comment">// if player touch the groud, jump-times reset</span></div><div class="line">  player.body.touching.down &amp;&amp; ( airJump = <span class="number">2</span> );	  </div><div class="line">  </div><div class="line">  <span class="keyword">switch</span>(airJump)&#123;</div><div class="line">    <span class="keyword">case</span> <span class="number">2</span>: </div><div class="line">      player.body.velocity.y = <span class="number">-500</span>;</div><div class="line">      airJump = <span class="number">1</span>;</div><div class="line">    <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">      player.body.velocity.y = <span class="number">-400</span>;</div><div class="line">      airJump = <span class="number">0</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="debug">debug</h2><p>这种跳跃方法在平地上测试OK，在平台间测试有bug。<br>bug原因：由于测试时通过按下Jump来判断位置重置，因此从平台上落下时无法跳跃。<br>原本是为了性能从而把判断放在jump函数中，在需要跳跃时再去判断当前的位置，因为游戏运行时卡顿严重。后来发现开着调试窗口的原因。<br>解决了以上问题以后，把判断放在update中时，问题解决。</p>
<h1 id="实现二段跳·改">实现二段跳·改</h1><h2 id="debug-1">debug</h2><p>有一定游戏经验的同学都知道，从平台上落下的时候只能触发二次airJump，而此函数在落下时保留了两段跳。从而导致下落二段跳是玩家能跳的非常远。于是我们把update函数中的<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">player.body.touching.down &amp;&amp; ( airJump = <span class="number">2</span> );</div></pre></td></tr></table></figure></p>
<p>更正为<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">airJump = player.body.touching.down ? <span class="number">2</span> : (airJump == <span class="number">2</span> ? <span class="number">1</span> : airJump);</div></pre></td></tr></table></figure></p>
<p>用if语句来解释就是<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (player.body.touching.down) &#123;</div><div class="line">  airJump = <span class="number">2</span>;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (airJump == <span class="number">2</span>) &#123;</div><div class="line">  airJump = <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果是高空落下的情况如果airjump次数为最大值，则让次数减少1。否则保持原来的次数</p>
<h1 id="实现多段跳">实现多段跳</h1><p>按照之前的思路，能够较容易地实现并优化我们的代码。</p>
<h2 id="定义变量-1">定义变量</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> maxJump = <span class="number">3</span>;	<span class="comment">// 实现N段跳</span></div><div class="line"><span class="keyword">var</span> airJump;		<span class="comment">// 剩余跳跃次数</span></div></pre></td></tr></table></figure>
<h2 id="update函数更新">update函数更新</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">airJump = player.body.touching.down ? maxJump : (airJump == maxJump ? maxJump<span class="number">-1</span> : airJump);</div></pre></td></tr></table></figure>
<h2 id="jump函数更新">jump函数更新</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">jump</span> (<span class="params"></span>) </span>&#123;</div><div class="line"> <span class="comment">// return when jump-times out</span></div><div class="line"> <span class="keyword">if</span> (airJump&lt;<span class="number">1</span>) <span class="keyword">return</span>;</div><div class="line"></div><div class="line"> <span class="comment">// the jump-height depends on the jump-times :)</span></div><div class="line"> player.body.velocity.y = airJump == maxJump ? <span class="number">-500</span> : <span class="number">-400</span>;</div><div class="line"> airJump --;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>具体跳跃高度你可以用与次数有关的线性方程来决定，也可以像我一样使用固定高度。</p>
<h1 id="END?">END?</h1><p>说了这么多，然而这只是一个临时替代的方案，最终还是要用状态量去实现多段跳跃。这对于<code>后续维护</code>非常重要。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;刚刚回到学校，整个人都不好了&lt;/del&gt;&lt;/p&gt;
&lt;h1 id=&quot;Forward&quot;&gt;Forward&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://coding.net/u/xana/p/yinyong/git/raw/master/img/nduantiao.
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="phaser" scheme="http://yoursite.com/tags/phaser/"/>
    
  </entry>
  
  <entry>
    <title>A web server?But I want to make games!</title>
    <link href="http://yoursite.com/2015/08/21/webServer/"/>
    <id>http://yoursite.com/2015/08/21/webServer/</id>
    <published>2015-08-21T08:54:52.000Z</published>
    <updated>2015-08-21T09:19:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>By Richard Davey on 17th June 2014   @photonstorm</p>
<p>In this tutorial we’re going to cover setting-up a development environment with which you can build your Phaser games. This will include running a local web server, picking an IDE, getting the latest version of Phaser and checking it all works together.</p>
<p>If you trust us that you do need a local web server for development, then you can skip the explanation below and head directly to part 2.</p>
<p>If you’d like to know the reasoning why, please read on …</p>
<h3 id="A_web_server?_But_I_want_to_make_games!"><strong>A web server? But I want to make games!</strong></h3><blockquote>
<p><em>“Why do I need a local web server? Can’t I just drag the html files onto my browser?”</em></p>
</blockquote>
<p align="right"><strong>—A. SANE, DEVELOPER</strong></p>


<p>Not these days, no. I appreciate that it’s a bit confusing, even contradictory at times, but it all boils down to browser security. If you’re making a static html web page then you can happily drag this file into your browser and see the end results. You can also “Save As” entire web pages locally and re-open them with most the contents intact. If both of these things work why can’t you drag an HTML5 game into a browser and run it?</p>
<p>It’s to do with the protocol used to access the files. When you request anything over the web you’re using <code>http</code>, and the server level security is enough to ensure you can only access files you’re meant to. But when you drag a file in it’s loaded via the local file system (technically <code>file://</code>) and that is massively restricted, for obvious reasons. Under <code>file://</code> there’s no concept of domains, no server level security, just a raw file system.</p>
<p>Ask yourself this: do you really want JavaScript to have the ability to load files from anywhere on your local file system?</p>
<p>Your immediate answer should of course be “not in a million years!”. If JavaScript had free reign while operating under <code>file://</code> there would be nothing stopping it loading pretty much any file, and sending it off who knows where.</p>
<p>Because this is so dangerous browsers lock themselves down tighter than Alcatraz when running under <code>file://</code>. Every single page becomes treated as a unique local domain. That is why “Save Web page” works, to a degree. It opens under the same cross-site restrictions as if they were on a live server.</p>
<p>There’s a detailed post about it on the Chromium blog that is well worth a read if you’d like to learn more.</p>
<p>Your game is going to need to load resources: images, audio files, JSON data, maybe other JavaScript files. And in order to do this it needs to run unhindered by the browser security shackles. It needs <code>http://</code> access to the game files. And for that we need a web server.</p>
<p>original text: Phaser Intro <a href="http://phaser.io/tutorials/getting-started/part2" target="_blank" rel="external">Part 1</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;By Richard Davey on 17th June 2014   @photonstorm&lt;/p&gt;
&lt;p&gt;In this tutorial we’re going to cover setting-up a development environment with 
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
</feed>
